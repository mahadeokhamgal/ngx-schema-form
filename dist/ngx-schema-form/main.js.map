{"version":3,"file":"main.js","mappings":"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","sources":["./projects/schema-form/src/lib/default.widget.ts","./projects/schema-form/src/lib/defaultwidgets/_directives/disableControl.directive.ts","./projects/schema-form/src/lib/defaultwidgets/array/array.widget.ts","./projects/schema-form/src/lib/defaultwidgets/button/button.widget.ts","./projects/schema-form/src/lib/defaultwidgets/checkbox/checkbox.widget.ts","./projects/schema-form/src/lib/defaultwidgets/defaultwidgetregistry.ts","./projects/schema-form/src/lib/defaultwidgets/file/file.widget.ts","./projects/schema-form/src/lib/defaultwidgets/index.ts","./projects/schema-form/src/lib/defaultwidgets/integer/integer.widget.ts","./projects/schema-form/src/lib/defaultwidgets/object/object.widget.ts","./projects/schema-form/src/lib/defaultwidgets/radio/radio.widget.ts","./projects/schema-form/src/lib/defaultwidgets/range/range.widget.ts","./projects/schema-form/src/lib/defaultwidgets/select/select.widget.ts","./projects/schema-form/src/lib/defaultwidgets/string/string.widget.ts","./projects/schema-form/src/lib/defaultwidgets/textarea/textarea.widget.ts","./projects/schema-form/src/lib/expression-compiler-factory.ts","./projects/schema-form/src/lib/form.component.ts","./projects/schema-form/src/lib/formelement.action.component.ts","./projects/schema-form/src/lib/formelement.component.ts","./projects/schema-form/src/lib/index.ts","./projects/schema-form/src/lib/log.service.ts","./projects/schema-form/src/lib/model/ISchema.ts","./projects/schema-form/src/lib/model/action.ts","./projects/schema-form/src/lib/model/actionregistry.ts","./projects/schema-form/src/lib/model/arrayproperty.ts","./projects/schema-form/src/lib/model/atomicproperty.ts","./projects/schema-form/src/lib/model/binding.ts","./projects/schema-form/src/lib/model/bindingregistry.ts","./projects/schema-form/src/lib/model/booleanproperty.ts","./projects/schema-form/src/lib/model/formproperty.ts","./projects/schema-form/src/lib/model/formpropertyfactory.ts","./projects/schema-form/src/lib/model/index.ts","./projects/schema-form/src/lib/model/nullproperty.ts","./projects/schema-form/src/lib/model/numberproperty.ts","./projects/schema-form/src/lib/model/objectproperty.ts","./projects/schema-form/src/lib/model/schemapreprocessor.ts","./projects/schema-form/src/lib/model/stringproperty.ts","./projects/schema-form/src/lib/model/typemapping.ts","./projects/schema-form/src/lib/model/utils.ts","./projects/schema-form/src/lib/model/validator.ts","./projects/schema-form/src/lib/model/validatorregistry.ts","./projects/schema-form/src/lib/property-binding-registry.ts","./projects/schema-form/src/lib/schema-form.module.ts","./projects/schema-form/src/lib/schemavalidatorfactory.ts","./projects/schema-form/src/lib/template-schema/button/button.component.ts","./projects/schema-form/src/lib/template-schema/button/button.component.html","./projects/schema-form/src/lib/template-schema/field/field-parent.ts","./projects/schema-form/src/lib/template-schema/field/field.component.ts","./projects/schema-form/src/lib/template-schema/field/field.component.html","./projects/schema-form/src/lib/template-schema/field/field.ts","./projects/schema-form/src/lib/template-schema/field/item/item.component.ts","./projects/schema-form/src/lib/template-schema/field/item/item.component.html","./projects/schema-form/src/lib/template-schema/index.ts","./projects/schema-form/src/lib/template-schema/template-schema-element.ts","./projects/schema-form/src/lib/template-schema/template-schema.directive.ts","./projects/schema-form/src/lib/template-schema/template-schema.module.ts","./projects/schema-form/src/lib/template-schema/template-schema.service.ts","./projects/schema-form/src/lib/terminator.service.ts","./projects/schema-form/src/lib/widget.ts","./projects/schema-form/src/lib/widgetchooser.component.ts","./projects/schema-form/src/lib/widgetfactory.ts","./projects/schema-form/src/lib/widgetregistry.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app.routes.ts","./src/app/app.service.ts","./src/app/json-schema-example/binding_sample_bindings.ts","./src/app/json-schema-example/json-schema-example.component.ts","./src/app/json-schema-example/json-schema-example.component.html","./src/app/template-schema-example/template-schema-example.component.ts","./src/app/template-schema-example/template-schema-example.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'sf-default-field',\r\n  template: `<p>Unknow type</p>`\r\n})\r\nexport class DefaultWidget {}\r\n","import { Input, Directive } from '@angular/core'\r\nimport { NgControl } from '@angular/forms';\r\n\r\n@Directive({\r\n    selector: '[disableControl]'\r\n})\r\nexport class DisableControlDirective {\r\n\r\n    @Input() set disableControl(condition: boolean) {\r\n        const action = condition ? 'disable' : 'enable';\r\n        this.ngControl.control[action]();\r\n    }\r\n\r\n    constructor(private ngControl: NgControl) {\r\n    }\r\n\r\n}","import { Component } from '@angular/core';\r\n\r\nimport { ArrayLayoutWidget } from '../../widget';\r\nimport { FormProperty } from '../../model';\r\n\r\n@Component({\r\n  selector: 'sf-array-widget',\r\n  template: `<div class=\"widget form-group\">\r\n\t<label *ngIf=\"schema.title\" [attr.for]=\"id\" class=\"horizontal control-label\">\r\n\t\t{{ schema.title }}\r\n\t</label>\r\n\t<span *ngIf=\"schema.description\" class=\"formHelp\">{{schema.description}}</span>\r\n\t<div *ngFor=\"let itemProperty of formProperty.properties\">\r\n\t\t<sf-form-element [formProperty]=\"itemProperty\"></sf-form-element>\r\n\t\t<button (click)=\"removeItem(itemProperty)\" class=\"btn btn-default array-remove-button\"\r\n\t\t\t[disabled]=\"isRemoveButtonDisabled()\" \r\n\t\t\t*ngIf=\"!(schema.hasOwnProperty('minItems') && schema.hasOwnProperty('maxItems') && schema.minItems === schema.maxItems)\"\r\n\t\t\t>\r\n\t\t\t<span class=\"glyphicon glyphicon-minus\" aria-hidden=\"true\"></span> Remove\r\n\t\t</button>\r\n\t</div>\r\n\t<button (click)=\"addItem()\" class=\"btn btn-default array-add-button\"\r\n\t\t[disabled]=\"isAddButtonDisabled()\"\r\n\t\t*ngIf=\"!(schema.hasOwnProperty('minItems') && schema.hasOwnProperty('maxItems') && schema.minItems === schema.maxItems)\"\r\n\t>\r\n\t\t<span class=\"glyphicon glyphicon-plus\" aria-hidden=\"true\"></span> Add\r\n\t</button>\r\n</div>`\r\n})\r\nexport class ArrayWidget extends ArrayLayoutWidget {\r\n  buttonDisabledAdd:boolean\r\n  buttonDisabledRemove:boolean\r\n\r\n  addItem() {\r\n\tthis.formProperty.addItem();\r\n\tthis.updateButtonDisabledState()\r\n  }\r\n\r\n  removeItem(item: FormProperty) {\r\n\tthis.formProperty.removeItem(item);\r\n\tthis.updateButtonDisabledState()\r\n  }\r\n\r\n  trackByIndex(index: number, item: any) {\r\n    return index;\r\n  }\r\n\r\n\tupdateButtonDisabledState() {\r\n\t\tthis.buttonDisabledAdd = this.isAddButtonDisabled()\r\n\t\tthis.buttonDisabledRemove = this.isRemoveButtonDisabled()\r\n\t}\r\n\tisAddButtonDisabled() {\r\n\t\tif (this.schema.hasOwnProperty('maxItems') && Array.isArray(this.formProperty.properties)) {\r\n\t\t\tif (this.formProperty.properties.length >= this.schema.maxItems) {\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false\r\n\t}\r\n\r\n\tisRemoveButtonDisabled() {\r\n\t\tif (this.schema.hasOwnProperty('minItems') && Array.isArray(this.formProperty.properties)) {\r\n\t\t\tif (this.formProperty.properties.length <= this.schema.minItems) {\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false\r\n\t}\r\n}\r\n","import {Component} from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: 'sf-button-widget',\r\n  template: '<button (click)=\"button.action($event)\">{{button.label}}</button>'\r\n})\r\nexport class ButtonWidget {\r\n  public button\r\n  public formProperty\r\n}\r\n","import { Component, AfterViewInit } from '@angular/core';\r\n\r\nimport { ControlWidget } from '../../widget';\r\n\r\n@Component({\r\n  selector: 'sf-checkbox-widget',\r\n  template: `<div class=\"widget form-group\">\r\n    <label *ngIf=\"schema.title\" [attr.for]=\"id\" class=\"horizontal control-label\">\r\n        {{ schema.title }}\r\n    </label>\r\n\t<div *ngIf=\"schema.type!='array'\" class=\"checkbox\">\r\n\t\t<label class=\"horizontal control-label\">\r\n\t\t\t<input [formControl]=\"control\" [attr.name]=\"name\" [attr.id]=\"id\" [indeterminate]=\"control.value !== false && control.value !== true ? true :null\" type=\"checkbox\" [disableControl]=\"schema.readOnly\">\r\n\t\t\t<input *ngIf=\"schema.readOnly\" [attr.name]=\"name\" type=\"hidden\" [formControl]=\"control\">\r\n\t\t\t{{schema.description}}\r\n\t\t</label>\r\n\t</div>\r\n\t<ng-container *ngIf=\"schema.type==='array'\">\r\n\t\t<div *ngFor=\"let option of schema.items.oneOf\" class=\"checkbox\">\r\n\t\t\t<label class=\"horizontal control-label\">\r\n\t\t\t\t<input [attr.name]=\"name\"\r\n\t\t\t\t\tvalue=\"{{option.enum[0]}}\" type=\"checkbox\" \r\n\t\t\t\t\t[attr.disabled]=\"schema.readOnly\"\r\n\t\t\t\t\t(change)=\"onCheck($event.target)\"\r\n\t\t\t\t\t[attr.checked]=\"checked[option.enum[0]] ? true : null\"\r\n\t\t\t\t\t[attr.id]=\"id + '.' + option.enum[0]\"\r\n\t\t\t\t\t>\r\n\t\t\t\t{{option.description}}\r\n\t\t\t</label>\r\n\t\t</div>\r\n\t</ng-container>\r\n</div>`\r\n})\r\nexport class CheckboxWidget extends ControlWidget implements AfterViewInit {\r\n\r\n\tchecked: any = {};\r\n\r\n\tngAfterViewInit() {\r\n\t\tconst control = this.control;\r\n\t\tthis.formProperty.valueChanges.subscribe((newValue) => {\r\n\t\t\tif (control.value !== newValue) {\r\n\t\t\t\tcontrol.setValue(newValue, { emitEvent: false });\r\n\t\t\t\tif (newValue && Array.isArray(newValue)) {\r\n\t\t\t\t\tnewValue.map(v => this.checked[v] = true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.formProperty.errorsChanges.subscribe((errors) => {\r\n\t\t\tcontrol.setErrors(errors, { emitEvent: true });\r\n\t\t});\r\n\t\tcontrol.valueChanges.subscribe((newValue) => {\r\n\t\t\tthis.formProperty.setValue(newValue, false);\r\n\t\t});\r\n\t}\r\n\r\n\tonCheck(el) {\r\n\t\tif (el.checked) {\r\n\t\t\tthis.checked[el.value] = true;\r\n\t\t} else {\r\n\t\t\tdelete this.checked[el.value];\r\n\t\t}\r\n\t\tthis.formProperty.setValue(Object.keys(this.checked), false);\r\n\t}\r\n}\r\n","import { ArrayWidget } from './array/array.widget';\r\nimport { ButtonWidget } from './button/button.widget';\r\nimport { CheckboxWidget } from './checkbox/checkbox.widget';\r\nimport { FileWidget } from './file/file.widget';\r\nimport { IntegerWidget } from './integer/integer.widget';\r\nimport { ObjectWidget } from './object/object.widget';\r\nimport { RadioWidget } from './radio/radio.widget';\r\nimport { RangeWidget } from './range/range.widget';\r\nimport { SelectWidget } from './select/select.widget';\r\nimport { StringWidget } from './string/string.widget';\r\nimport { TextAreaWidget } from './textarea/textarea.widget';\r\n\r\nimport { WidgetRegistry } from '../widgetregistry';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class DefaultWidgetRegistry extends WidgetRegistry {\r\n  constructor() {\r\n    super();\r\n\r\n    this.register('array',  ArrayWidget);\r\n    this.register('object',  ObjectWidget);\r\n\r\n    this.register('string', StringWidget);\r\n    this.register('search', StringWidget);\r\n    this.register('tel', StringWidget);\r\n    this.register('url', StringWidget);\r\n    this.register('email', StringWidget);\r\n    this.register('password', StringWidget);\r\n    this.register('color', StringWidget);\r\n    this.register('date', StringWidget);\r\n    this.register('date-time', StringWidget);\r\n    this.register('time', StringWidget);\r\n\r\n    this.register('integer', IntegerWidget);\r\n    this.register('number', IntegerWidget);\r\n    this.register('range', RangeWidget);\r\n\r\n    this.register('textarea', TextAreaWidget);\r\n\r\n    this.register('file', FileWidget);\r\n    this.register('select', SelectWidget);\r\n    this.register('radio', RadioWidget);\r\n    this.register('boolean', CheckboxWidget);\r\n    this.register('checkbox', CheckboxWidget);\r\n\r\n    this.register('button', ButtonWidget);\r\n\r\n    this.setDefaultWidget(StringWidget);\r\n  }\r\n}\r\n","import { Component, AfterViewInit } from '@angular/core';\r\n\r\nimport { ControlWidget } from '../../widget';\r\n\r\n@Component({\r\n  selector: 'sf-file-widget',\r\n  template: `<div class=\"widget form-group\">\r\n\t<label *ngIf=\"schema.title\" [attr.for]=\"id\" class=\"horizontal control-label\">\r\n\t\t{{ schema.title }}\r\n\t</label>\r\n  <span *ngIf=\"schema.description\" class=\"formHelp\">{{schema.description}}</span>\r\n  <input [name]=\"name\" class=\"text-widget file-widget\" [attr.id]=\"id\"\r\n    [formControl]=\"control\" type=\"file\" [attr.disabled]=\"schema.readOnly?true:null\"\r\n    (change)=\"onFileChange($event)\">\r\n\t<input *ngIf=\"schema.readOnly\" [attr.name]=\"name\" type=\"hidden\" [formControl]=\"control\">\r\n</div>`\r\n})\r\nexport class FileWidget extends ControlWidget implements AfterViewInit {\r\n\r\n  protected reader = new FileReader();\r\n  protected filedata: any = {};\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    // OVERRIDE ControlWidget ngAfterViewInit() as ReactiveForms do not handle\r\n    // file inputs\r\n    const control = this.control;\r\n    this.formProperty.errorsChanges.subscribe((errors) => {\r\n      control.setErrors(errors, { emitEvent: true });\r\n    });\r\n\r\n    this.reader.onloadend = () => {\r\n      this.filedata.data = window.btoa((this.reader.result as string));\r\n      this.formProperty.setValue(this.filedata, false);\r\n    };\r\n  }\r\n\r\n  onFileChange($event) {\r\n    const file = $event.target.files[0];\r\n    this.filedata.filename = file.name;\r\n    this.filedata.size = file.size;\r\n    this.filedata['content-type'] = file.type;\r\n    this.filedata.encoding = 'base64';\r\n    this.reader.readAsBinaryString(file);\r\n  }\r\n}\r\n","export * from \"./array/array.widget\";\r\nexport * from \"./checkbox/checkbox.widget\";\r\nexport * from \"./file/file.widget\";\r\nexport * from \"./integer/integer.widget\";\r\nexport * from \"./object/object.widget\";\r\nexport * from \"./radio/radio.widget\";\r\nexport * from \"./range/range.widget\";\r\nexport * from \"./select/select.widget\";\r\nexport * from \"./string/string.widget\";\r\nexport * from \"./textarea/textarea.widget\";\r\nexport * from \"./button/button.widget\";\r\nexport * from \"./defaultwidgetregistry\";\r\nexport * from \"./_directives/disableControl.directive\";\r\n","import {\r\n  Component,\r\n} from '@angular/core';\r\n\r\nimport { ControlWidget } from '../../widget';\r\n\r\n@Component({\r\n  selector: 'sf-integer-widget',\r\n  template: `<div class=\"widget form-group\">\r\n\t<label *ngIf=\"schema.title\" [attr.for]=\"id\" class=\"horizontal control-label\">\r\n\t\t{{ schema.title }}\r\n\t</label>\r\n  <span *ngIf=\"schema.description\" class=\"formHelp\">{{schema.description}}</span>\r\n\t<input [attr.readonly]=\"schema.readOnly?true:null\" [attr.name]=\"name\"\r\n\t[attr.id]=\"id\"\r\n\tclass=\"text-widget integer-widget form-control\" [formControl]=\"control\"\r\n\t[attr.type]=\"'number'\" [attr.min]=\"schema.minimum\" [attr.max]=\"schema.maximum\"\r\n\t[attr.placeholder]=\"schema.placeholder\"\r\n\t[attr.maxLength]=\"schema.maxLength || null\"\r\n  [attr.minLength]=\"schema.minLength || null\">\r\n</div>`\r\n})\r\nexport class IntegerWidget extends ControlWidget {}\r\n","import { Component } from '@angular/core';\r\n\r\nimport { ObjectLayoutWidget } from '../../widget';\r\n\r\n@Component({\r\n  selector: 'sf-form-object',\r\n  template: `<fieldset *ngFor=\"let fieldset of formProperty.schema.fieldsets\">\r\n\t<legend *ngIf=\"fieldset.title\">{{fieldset.title}}</legend>\r\n\t<div *ngIf=\"fieldset.description\">{{fieldset.description}}</div>\r\n\t<div *ngFor=\"let fieldId of fieldset.fields\">\r\n\t\t<sf-form-element [formProperty]=\"formProperty.getProperty(fieldId)\"></sf-form-element>\r\n\t</div>\r\n</fieldset>`\r\n})\r\nexport class ObjectWidget extends ObjectLayoutWidget { }\r\n","import { Component } from '@angular/core';\r\n\r\nimport { ControlWidget } from '../../widget';\r\n\r\n@Component({\r\n  selector: 'sf-radio-widget',\r\n  template: `<div class=\"widget form-group\">\r\n\t<label *ngIf=\"schema.title\">{{schema.title}}</label>\r\n  <span *ngIf=\"schema.description\" class=\"formHelp\">{{schema.description}}</span>\r\n\t<div *ngFor=\"let option of schema.oneOf\" class=\"radio\">\r\n\t\t<label class=\"horizontal control-label\">\r\n\t\t\t<input [formControl]=\"control\" [attr.name]=\"name\" [attr.id]=\"id + '.' + option.enum[0]\" value=\"{{option.enum[0]}}\" type=\"radio\"  [disableControl]=\"schema.readOnly||option.readOnly\">\r\n\t\t\t{{option.description}}\r\n\t\t</label>\r\n\t</div>\r\n\t<input *ngIf=\"schema.readOnly\" [attr.name]=\"name\" type=\"hidden\" [formControl]=\"control\">\r\n</div>`\r\n})\r\nexport class RadioWidget extends ControlWidget {}\r\n","import { Component } from '@angular/core';\r\n\r\nimport { ControlWidget } from '../../widget';\r\n\r\n@Component({\r\n  selector: 'sf-range-widget',\r\n  template: `<div class=\"widget form-group\">\r\n\t<label *ngIf=\"schema.title\" [attr.for]=\"id\" class=\"horizontal control-label\">\r\n\t\t{{ schema.title }}\r\n\t</label>\r\n    <span *ngIf=\"schema.description\" class=\"formHelp\">{{schema.description}}</span>\t\r\n\t<input [name]=\"name\" class=\"text-widget range-widget\" [attr.id]=\"id\"\r\n\t[formControl]=\"control\" [attr.type]=\"'range'\" [attr.min]=\"schema.minimum\" [attr.max]=\"schema.maximum\" [disableControl]=\"schema.readOnly?true:null\" >\r\n\t<input *ngIf=\"schema.readOnly\" [attr.name]=\"name\" type=\"hidden\">\r\n</div>`\r\n})\r\nexport class RangeWidget extends ControlWidget {}\r\n","import { Component } from '@angular/core';\r\n\r\nimport { ControlWidget } from '../../widget';\r\n\r\n@Component({\r\n\tselector: 'sf-select-widget',\r\n\ttemplate: `<div class=\"widget form-group\">\r\n\t<label *ngIf=\"schema.title\" [attr.for]=\"id\" class=\"horizontal control-label\">\r\n\t\t{{ schema.title }}\r\n\t</label>\r\n\r\n\t<span *ngIf=\"schema.description\" class=\"formHelp\">\r\n\t\t{{schema.description}}\r\n\t</span>\r\n\r\n\t<select *ngIf=\"schema.type!='array'\" [formControl]=\"control\" [attr.name]=\"name\" [attr.id]=\"id\" [disableControl]=\"schema.readOnly\" class=\"form-control\">\r\n\t\t<ng-container *ngIf=\"schema.oneOf; else use_enum\">\r\n\t\t\t<option *ngFor=\"let option of schema.oneOf\" [ngValue]=\"option.enum[0]\" >{{option.description}}</option>\r\n\t\t</ng-container>\r\n\t\t<ng-template #use_enum>\r\n\t\t\t<option *ngFor=\"let option of schema.enum\" [ngValue]=\"option\" >{{option}}</option>\r\n\t\t</ng-template>\r\n\t</select>\r\n\r\n\t<select *ngIf=\"schema.type==='array'\" multiple [formControl]=\"control\" [attr.name]=\"name\" [attr.id]=\"id\" [disableControl]=\"schema.readOnly\" class=\"form-control\">\r\n    <option *ngFor=\"let option of schema.items.oneOf\" [ngValue]=\"option.enum[0]\" [disabled]=\"option.readOnly\">{{option.description}}</option>\r\n\t</select>\r\n\r\n\t<input *ngIf=\"schema.readOnly\" [attr.name]=\"name\" type=\"hidden\" [formControl]=\"control\">\r\n</div>`\r\n})\r\nexport class SelectWidget extends ControlWidget {}\r\n","import { Component } from '@angular/core';\r\n\r\nimport { ControlWidget } from '../../widget';\r\n\r\n@Component({\r\n  selector: 'sf-string-widget',\r\n  template: `<input *ngIf=\"this.schema.widget.id ==='hidden'; else notHiddenFieldBlock\"\r\n  [attr.name]=\"name\" type=\"hidden\" [formControl]=\"control\">\r\n<ng-template #notHiddenFieldBlock>\r\n<div class=\"widget form-group\">\r\n    <label *ngIf=\"schema.title\" [attr.for]=\"id\" class=\"horizontal control-label\">\r\n    \t{{ schema.title }}\r\n    </label>\r\n    <span *ngIf=\"schema.description\" class=\"formHelp\">{{schema.description}}</span>\r\n    <input [name]=\"name\" [attr.readonly]=\"(schema.widget.id!=='color') && schema.readOnly?true:null\"\r\n    class=\"text-widget.id textline-widget form-control\"\r\n    [attr.type]=\"!this.schema.widget.id || this.schema.widget.id === 'string' ? 'text' : this.schema.widget.id\"\r\n    [attr.id]=\"id\"  [formControl]=\"control\" [attr.placeholder]=\"schema.placeholder\"\r\n    [attr.maxLength]=\"schema.maxLength || null\"\r\n    [attr.minLength]=\"schema.minLength || null\"\r\n    [attr.required]=\"schema.isRequired || null\"\r\n\t[disableControl]=\"(schema.widget.id=='color' && schema.readOnly)?true:null\">\r\n    <input *ngIf=\"(schema.widget.id==='color' && schema.readOnly)\" [attr.name]=\"name\" type=\"hidden\" [formControl]=\"control\">\r\n</div>\r\n</ng-template>`\r\n})\r\nexport class StringWidget extends ControlWidget {\r\n\r\n    getInputType() {\r\n        if (!this.schema.widget.id || this.schema.widget.id === 'string') {\r\n            return 'text';\r\n        } else {\r\n            return this.schema.widget.id;\r\n        }\r\n    }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\nimport { ControlWidget } from '../../widget';\r\n\r\n@Component({\r\n  selector: 'sf-textarea-widget',\r\n  template: `<div class=\"widget form-group\">\r\n\t<label *ngIf=\"schema.title\" [attr.for]=\"id\" class=\"horizontal control-label\">\r\n\t\t{{ schema.title }}\r\n\t</label>\r\n  <span *ngIf=\"schema.description\" class=\"formHelp\">{{schema.description}}</span>\r\n\t<textarea [readonly]=\"schema.readOnly\" [name]=\"name\"\r\n\t\t[attr.id]=\"id\"\r\n\t\tclass=\"text-widget textarea-widget form-control\"\r\n\t\t[attr.placeholder]=\"schema.placeholder\"\r\n\t\t[attr.maxLength]=\"schema.maxLength || null\"\r\n    [attr.minLength]=\"schema.minLength || null\"\r\n\t\t[formControl]=\"control\"></textarea>\r\n</div>`\r\n})\r\nexport class TextAreaWidget extends ControlWidget {}\r\n","export abstract class ExpressionCompilerFactory {\r\n    public abstract createExpressionCompiler(): ExpressionCompiler;\r\n    public abstract createExpressionCompilerVisibilityIf(): ExpressionCompilerVisibilityIf;\r\n}\r\n\r\nexport interface ExpressionCompiler {\r\n    evaluate(expression: string, context: object): any;\r\n}\r\n\r\nexport interface ExpressionCompilerVisibilityIf {\r\n    evaluate(expression: string, context: ExpressionContextVisibilitIf): any;\r\n}\r\n/**\r\n * UseCase:<br/>\r\n * When evaluating the expression of a <code>visibilityIf</code> condition\r\n * an instance of this definition will be passed as context.<br/>\r\n * This will give access to the source and target <code>FormProperty</code>.\r\n */\r\nexport interface ExpressionContextVisibilitIf {\r\n    /**\r\n     * The source property which has the <code>visibilityIf</code> defined\r\n     */\r\n    source: FormProperty\r\n    /**\r\n     * The target property given with the <code>visibilityIf</code>\r\n     * <em>path</em> property\r\n     */\r\n    target: FormProperty\r\n}\r\n\r\n\r\nimport * as JEXL from 'jexl';\r\nimport { FormProperty } from './model';\r\n\r\nexport class JEXLExpressionCompilerFactory extends ExpressionCompilerFactory {\r\n    public createExpressionCompiler(): ExpressionCompiler {\r\n        return new JEXLExpressionCompiler();\r\n    }\r\n\r\n    public createExpressionCompilerVisibilityIf(): ExpressionCompilerVisibilityIf {\r\n        return new JEXLExpressionCompilerVisibiltyIf();\r\n    }\r\n}\r\n\r\nexport class JEXLExpressionCompiler implements ExpressionCompiler {\r\n    evaluate(expression: string, context: object = {}): any {\r\n        return new JEXL.Jexl().evalSync(expression, context)\r\n    }\r\n}\r\n\r\nexport class JEXLExpressionCompilerVisibiltyIf implements ExpressionCompilerVisibilityIf {\r\n    evaluate(expression: string, context: ExpressionContextVisibilitIf = { source: {} as FormProperty, target: {} as FormProperty }): any {\r\n        return new JEXL.Jexl().evalSync(expression, context)\r\n    }\r\n}\r\n","import {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  OnChanges,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  SimpleChanges\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nimport {Action} from './model/action';\r\nimport {ActionRegistry} from './model/actionregistry';\r\nimport {FormProperty} from './model/formproperty';\r\nimport {FormPropertyFactory} from './model/formpropertyfactory';\r\nimport {SchemaPreprocessor} from './model/schemapreprocessor';\r\nimport {ValidatorRegistry} from './model/validatorregistry';\r\nimport {Validator} from './model/validator';\r\nimport {Binding} from './model/binding';\r\nimport {BindingRegistry} from './model/bindingregistry';\r\n\r\nimport {SchemaValidatorFactory} from './schemavalidatorfactory';\r\nimport {WidgetFactory} from './widgetfactory';\r\nimport {TerminatorService} from './terminator.service';\r\nimport {PropertyBindingRegistry} from './property-binding-registry';\r\nimport { ExpressionCompilerFactory } from './expression-compiler-factory';\r\nimport {ISchema} from './model/ISchema';\r\nimport { LogService } from './log.service';\r\n\r\nexport function useFactory(schemaValidatorFactory, validatorRegistry, propertyBindingRegistry, expressionCompilerFactory, logService) {\r\n  return new FormPropertyFactory(schemaValidatorFactory, validatorRegistry, propertyBindingRegistry, expressionCompilerFactory, logService);\r\n}\r\n\r\n@Component({\r\n  selector: 'sf-form',\r\n  template: `\r\n    <form *ngIf=\"rootProperty\" [attr.name]=\"rootProperty.rootName\" [attr.id]=\"rootProperty.rootName\">\r\n      <sf-form-element [formProperty]=\"rootProperty\"></sf-form-element>\r\n    </form>`,\r\n  providers: [\r\n    ActionRegistry,\r\n    ValidatorRegistry,\r\n    PropertyBindingRegistry,\r\n    BindingRegistry,\r\n    SchemaPreprocessor,\r\n    WidgetFactory,\r\n    {\r\n      provide: FormPropertyFactory,\r\n      useFactory: useFactory,\r\n      deps: [SchemaValidatorFactory, ValidatorRegistry, PropertyBindingRegistry, ExpressionCompilerFactory, LogService]\r\n    },\r\n    TerminatorService,\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: FormComponent,\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class FormComponent implements OnChanges, ControlValueAccessor {\r\n\r\n  @Input() schema: ISchema | null = null;\r\n\r\n  @Input() model: any;\r\n\r\n  @Input() actions: { [actionId: string]: Action } = {};\r\n\r\n  @Input() validators: { [path: string]: Validator } = {};\r\n\r\n  @Input() bindings: { [path: string]: Binding } = {};\r\n\r\n  @Output() onChange = new EventEmitter<{ value: any }>();\r\n\r\n  @Output() modelChange = new EventEmitter<any>();\r\n\r\n  @Output() isValid = new EventEmitter<boolean>();\r\n\r\n  @Output() onErrorChange = new EventEmitter<{ value: any[] }>();\r\n\r\n  @Output() onErrorsChange = new EventEmitter<{value: any}>();\r\n\r\n  rootProperty: FormProperty = null;\r\n\r\n  private onChangeCallback: any;\r\n\r\n  constructor(\r\n    private formPropertyFactory: FormPropertyFactory,\r\n    private actionRegistry: ActionRegistry,\r\n    private validatorRegistry: ValidatorRegistry,\r\n    private bindingRegistry: BindingRegistry,\r\n    private cdr: ChangeDetectorRef,\r\n    private terminator: TerminatorService\r\n  ) { }\r\n\r\n  writeValue(obj: any) {\r\n    if (this.rootProperty) {\r\n      this.rootProperty.reset(obj, false);\r\n    }\r\n  }\r\n\r\n  registerOnChange(fn: any) {\r\n    this.onChangeCallback = fn;\r\n    if (this.rootProperty) {\r\n      this.rootProperty.valueChanges.subscribe(\r\n        this.onValueChanges.bind(this)\r\n      );\r\n    }\r\n  }\r\n\r\n  // TODO implement\r\n  registerOnTouched(fn: any) {\r\n  }\r\n\r\n  // TODO implement\r\n  // setDisabledState(isDisabled: boolean)?: void\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.validators) {\r\n      this.setValidators();\r\n    }\r\n\r\n    if (changes.actions) {\r\n      this.setActions();\r\n    }\r\n\r\n    if (changes.bindings) {\r\n      this.setBindings();\r\n    }\r\n\r\n    if (this.schema && !this.schema.type) {\r\n      this.schema.type = 'object';\r\n    }\r\n\r\n    if (this.schema && changes.schema) {\r\n      if (!changes.schema.firstChange) {\r\n        this.terminator.destroy();\r\n      }\r\n\r\n      SchemaPreprocessor.preprocess(this.schema);\r\n      this.rootProperty = this.formPropertyFactory.createProperty(this.schema);\r\n      if (this.model) {\r\n        // this.rootProperty.reset(this.model, false);\r\n      }\r\n\r\n      this.rootProperty.valueChanges.subscribe(\r\n        this.onValueChanges.bind(this)\r\n      );\r\n\r\n      this.rootProperty.errorsChanges.subscribe(value => {\r\n        this.onErrorChange.emit({value: value});\r\n        this.isValid.emit(!(value && value.length));\r\n      });\r\n\r\n    }\r\n\r\n    if (this.schema && (changes.model || changes.schema )) {\r\n      this.rootProperty.reset(this.model, false);\r\n      this.rootProperty._bindVisibility();\r\n      this.cdr.detectChanges();\r\n    }\r\n\r\n  }\r\n\r\n  private setValidators() {\r\n    this.validatorRegistry.clear();\r\n    if (this.validators) {\r\n      for (const validatorId in this.validators) {\r\n        if (this.validators.hasOwnProperty(validatorId)) {\r\n          this.validatorRegistry.register(validatorId, this.validators[validatorId]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private setActions() {\r\n    this.actionRegistry.clear();\r\n    if (this.actions) {\r\n      for (const actionId in this.actions) {\r\n        if (this.actions.hasOwnProperty(actionId)) {\r\n          this.actionRegistry.register(actionId, this.actions[actionId]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private setBindings() {\r\n    this.bindingRegistry.clear();\r\n    if (this.bindings) {\r\n      for (const bindingPath in this.bindings) {\r\n        if (this.bindings.hasOwnProperty(bindingPath)) {\r\n          this.bindingRegistry.register(bindingPath, this.bindings[bindingPath]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public reset() {\r\n    this.rootProperty.reset(null, true);\r\n  }\r\n\r\n  private setModel(value: any) {\r\n    if (this.model) {\r\n      for (const key of Object.keys(this.model)) delete this.model[key];\r\n      Object.assign(this.model, value);\r\n    } else {\r\n      this.model = value;\r\n    }\r\n  }\r\n\r\n  private onValueChanges(value) {\r\n    if (this.onChangeCallback) {\r\n      this.setModel(value);\r\n      this.onChangeCallback(value);\r\n    }\r\n\r\n    // two way binding is used\r\n    if (this.modelChange.observers.length > 0) {\r\n      if (!this.onChangeCallback) {\r\n        this.setModel(value);\r\n      }\r\n    }\r\n    this.onChange.emit({value: value});\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  ComponentRef,\r\n  Input,\r\n  OnChanges,\r\n  ViewChild,\r\n  ViewContainerRef,\r\n  OnInit,\r\n  OnDestroy\r\n} from \"@angular/core\";\r\nimport {Subscription} from 'rxjs';\r\nimport {WidgetFactory} from \"./widgetfactory\";\r\nimport {TerminatorService} from \"./terminator.service\";\r\n\r\n@Component({\r\n  selector: 'sf-form-element-action',\r\n  template: '<ng-template #target></ng-template>'\r\n})\r\nexport class FormElementComponentAction implements OnInit, OnChanges, OnDestroy {\r\n\r\n  @Input()\r\n  button: any;\r\n\r\n  @Input()\r\n  formProperty: any;\r\n\r\n  @ViewChild('target', { read: ViewContainerRef, static: true }) container: ViewContainerRef;\r\n\r\n  private ref: ComponentRef<any>;\r\n  private subs: Subscription;\r\n\r\n  constructor(private widgetFactory: WidgetFactory = null,\r\n              private terminator: TerminatorService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.subs = this.terminator.onDestroy.subscribe(destroy => {\r\n      if (destroy) {\r\n        this.ref.destroy();\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.ref = this.widgetFactory.createWidget(this.container, this.button.widget || 'button');\r\n    this.ref.instance.button = this.button;\r\n    this.ref.instance.formProperty = this.formProperty;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subs.unsubscribe();\r\n  }\r\n}\r\n","import {\r\n  Component, ElementRef,\r\n  Input, OnDestroy,\r\n  OnInit, Renderer2\r\n} from '@angular/core';\r\n\r\nimport {\r\n  UntypedFormControl\r\n} from '@angular/forms';\r\n\r\nimport {Widget} from './widget';\r\n\r\nimport {ActionRegistry} from './model/actionregistry';\r\nimport {FormProperty} from './model/formproperty';\r\nimport {BindingRegistry} from './model/bindingregistry';\r\nimport {Binding} from './model/binding';\r\nimport { LogService } from './log.service';\r\n\r\n@Component({\r\n  selector: 'sf-form-element',\r\n  template: `\r\n    <div *ngIf=\"formProperty.visible\"\r\n         [class.has-error]=\"!control.valid\"\r\n         [class.has-success]=\"control.valid\">\r\n      <sf-widget-chooser\r\n        (widgetInstanciated)=\"onWidgetInstanciated($event)\"\r\n        [widgetInfo]=\"formProperty.schema.widget\">\r\n      </sf-widget-chooser>\r\n      <sf-form-element-action *ngFor=\"let button of buttons\" [button]=\"button\" [formProperty]=\"formProperty\"></sf-form-element-action>\r\n    </div>`\r\n})\r\nexport class FormElementComponent implements OnInit, OnDestroy {\r\n\r\n  private static counter = 0;\r\n\r\n  @Input() formProperty: FormProperty;\r\n  control: UntypedFormControl = new UntypedFormControl('', () => null);\r\n\r\n  widget: Widget<any> = null;\r\n\r\n  buttons = [];\r\n\r\n  unlisten = [];\r\n\r\n  constructor(private actionRegistry: ActionRegistry,\r\n              private bindingRegistry: BindingRegistry,\r\n              private renderer: Renderer2,\r\n              private elementRef: ElementRef,\r\n              private logger: LogService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.parseButtons();\r\n    this.setupBindings();\r\n  }\r\n\r\n  private setupBindings() {\r\n    const bindings: Binding[] = this.bindingRegistry.get(this.formProperty.path);\r\n    if ((bindings || []).length) {\r\n      bindings.forEach((binding) => {\r\n        for (const eventId in binding) {\r\n          this.createBinding(eventId, binding[eventId]);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private createBinding(eventId, listeners) {\r\n    this.unlisten.push(this.renderer.listen(this.elementRef.nativeElement,\r\n      eventId,\r\n      (event) => {\r\n        const _listeners = Array.isArray(listeners) ? listeners : [listeners]\r\n        for (const _listener of _listeners) {\r\n          if (_listener instanceof Function) {\r\n            try { _listener(event, this.formProperty); } catch (e) { this.logger.error(`Error calling bindings event listener for '${eventId}'`, e) }\r\n          } else {\r\n            this.logger.warn('Calling non function handler for eventId ' + eventId + ' for path ' + this.formProperty.path);\r\n          }\r\n        }\r\n      }));\r\n  }\r\n\r\n  private parseButtons() {\r\n    if (this.formProperty.schema.buttons !== undefined) {\r\n      this.buttons = this.formProperty.schema.buttons;\r\n\r\n      for (let button of this.buttons) {\r\n        this.createButtonCallback(button);\r\n      }\r\n    }\r\n  }\r\n\r\n  private createButtonCallback(button) {\r\n    button.action = (e) => {\r\n      let action;\r\n      if (button.id && (action = this.actionRegistry.get(button.id))) {\r\n        if (action) {\r\n          action(this.formProperty, button.parameters);\r\n        }\r\n      }\r\n      e.preventDefault();\r\n    };\r\n  }\r\n\r\n  onWidgetInstanciated(widget: Widget<any>) {\r\n    this.widget = widget;\r\n    let id = this.formProperty.canonicalPathNotation || 'field' + (FormElementComponent.counter++);\r\n    if (this.formProperty.root.rootName) {\r\n      id = `${this.formProperty.root.rootName}:${id}`;\r\n    }\r\n\r\n    this.widget.formProperty = this.formProperty;\r\n    this.widget.schema = this.formProperty.schema;\r\n    this.widget.name = id;\r\n    this.widget.id = id;\r\n    this.widget.control = this.control;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.unlisten) {\r\n      this.unlisten.forEach((item) => {\r\n        item();\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n","export * from \"./defaultwidgets\";\r\nexport * from \"./model\";\r\nexport * from \"./template-schema\";\r\nexport * from \"./default.widget\";\r\nexport * from \"./expression-compiler-factory\";\r\nexport * from \"./form.component\";\r\nexport * from \"./formelement.action.component\";\r\nexport * from \"./formelement.component\";\r\nexport * from \"./log.service\";\r\nexport * from \"./property-binding-registry\";\r\nexport * from \"./schema-form.module\";\r\nexport * from \"./schemavalidatorfactory\";\r\nexport * from \"./terminator.service\";\r\nexport * from \"./widget\";\r\nexport * from \"./widgetchooser.component\";\r\nexport * from \"./widgetfactory\";\r\nexport * from \"./widgetregistry\";\r\n","import { InjectionToken, Inject, Injectable, Optional } from \"@angular/core\";\r\n\r\nexport const LOG_LEVEL = new InjectionToken<LogLevel>('Logging level');\r\n\r\n/**\r\n * Represents the different logging levels of the `console` output.\r\n */\r\nexport const enum LogLevel {\r\n    log,\r\n    warn,\r\n    error,\r\n    off,\r\n    all\r\n}\r\n\r\nexport abstract class LogService {\r\n    public logLevel = LogLevel.off;\r\n    constructor(@Optional() @Inject(LOG_LEVEL) public level: any /* should be of type `LogLevel` but AOT fails with : 'Error encountered in metadata generated for exported symbol 'DefaultLogService':\"Could not resolve type LogLevel.\" */) {\r\n        this.logLevel = level as LogLevel\r\n    }\r\n    /**\r\n     * Equals `console.warn`\r\n     * @param message \r\n     * @param optionalParams \r\n     */\r\n    public abstract warn(message?: any, ...optionalParams: any[]): void\r\n    /**\r\n     * Equals `console.error`\r\n     * @param message \r\n     * @param optionalParams \r\n     */\r\n    public abstract error(message?: any, ...optionalParams: any[]): void\r\n    /**\r\n     * Equals `console.log`\r\n     * @param message \r\n     * @param optionalParams \r\n     */\r\n    public abstract log(message?: any, ...optionalParams: any[]): void\r\n\r\n    isWarnEnabled() {\r\n        return LogLevel.all === this.logLevel || LogLevel.warn === this.logLevel\r\n    }\r\n\r\n    isErrorEnabled() {\r\n        return LogLevel.all === this.logLevel || LogLevel.error === this.logLevel\r\n    }\r\n\r\n    isLogEnabled() {\r\n        return LogLevel.all === this.logLevel || LogLevel.log === this.logLevel\r\n    }\r\n}\r\n\r\n/**\r\n * Very simple abstraction of logging\r\n */\r\n@Injectable()\r\nexport class DefaultLogService extends LogService {\r\n\r\n    constructor(@Optional() @Inject(LOG_LEVEL) public logLevel: any /* should be of type `LogLevel` but AOT fails with : 'Error encountered in metadata generated for exported symbol 'DefaultLogService':\"Could not resolve type LogLevel.\" */) {\r\n        super(logLevel)\r\n        this.logLevel = logLevel as LogLevel\r\n    }\r\n    warn = (!this.isWarnEnabled() ? () => { } : console.warn)\r\n    error = (!this.isErrorEnabled() ? () => { } : console.error)\r\n    log = (!this.isLogEnabled() ? () => { } : console.log)\r\n}","import { FieldType, TNullableFieldType } from '../template-schema/field/field';\r\nimport { TUnorderedPair } from './utils';\r\n\r\nexport interface IOneOf {\r\n  enum?: any[];\r\n  description?: string;\r\n  /** allow additional properties */\r\n  [prop: string]: any;\r\n}\r\n\r\nexport interface IWidget {\r\n  id?: string;\r\n  plugins?: string;\r\n  toolbar?: string;\r\n  /** allow additional properties */\r\n  [prop: string]: any;\r\n}\r\n\r\nexport interface IFieldSet {\r\n  id: string;\r\n  title: string;\r\n  name: string;\r\n  description: string;\r\n  fields: string[];\r\n  /** allow additional properties */\r\n  [prop: string]: any;\r\n}\r\n\r\nexport interface IButton {\r\n  id: string;\r\n  label: string;\r\n  widget?: string | object;\r\n  /** allow additional properties */\r\n  [prop: string]: any;\r\n}\r\n\r\nexport interface IProperties {\r\n  [prop: string]: ISchema;\r\n}\r\n\r\nexport type TSchemaScalarPrimitiveType = 'string' | 'boolean' | 'integer' | 'number';\r\nexport type TSchemaComplexPrimitiveType = 'object' | 'array';\r\nexport type TSchemaNullPrimitiveType = 'null';\r\nexport type TSchemaPrimitiveType = TSchemaComplexPrimitiveType | TSchemaScalarPrimitiveType | TSchemaNullPrimitiveType;\r\n\r\nexport type TSchemaNullableScalarPrimitiveType = TUnorderedPair<\r\n  TSchemaNullPrimitiveType,\r\n  TSchemaScalarPrimitiveType\r\n>;\r\n\r\nexport type TSchemaPropertyType = FieldType\r\n  | TNullableFieldType\r\n  | TSchemaPrimitiveType\r\n  | TSchemaNullableScalarPrimitiveType;\r\n\r\nexport interface ISchema {\r\n  $schema?: string;\r\n  type?: TSchemaPropertyType;\r\n  title?: string;\r\n  name?: string;\r\n  description?: string;\r\n  placeholder?: string;\r\n  minLength?: number;\r\n  maxLength?: number;\r\n  visibleIf?: any;\r\n  enum?: any[];\r\n  oneOf?: IOneOf[];\r\n  properties?: IProperties;\r\n  order?: string[];\r\n  items?: ISchema;\r\n  buttons?: IButton[];\r\n  required?: string[];\r\n  readOnly?: boolean;\r\n  format?: string;\r\n  widget?: IWidget | any;\r\n  fieldsets?: IFieldSet[];\r\n  /** allow additional properties */\r\n  [prop: string]: any;\r\n}\r\n","import { FormProperty } from './formproperty';\r\nexport interface Action {\r\n  (formProperty: FormProperty, parameters: any): void;\r\n}\r\n","import { Action } from './action';\r\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\r\nexport class ActionRegistry {\r\n  actions: {[key: string]: Action} = {};\r\n\r\n  clear() {\r\n    this.actions = {};\r\n  }\r\n\r\n  register(actionId: string, action: Action) {\r\n    this.actions[actionId] = action;\r\n  }\r\n\r\n  get(actionId: string) {\r\n    return this.actions[actionId];\r\n  }\r\n}\r\n","import {FormProperty, PropertyGroup} from './formproperty';\r\nimport {FormPropertyFactory} from './formpropertyfactory';\r\nimport { PROPERTY_TYPE_MAPPING } from './typemapping';\r\nimport {SchemaValidatorFactory} from '../schemavalidatorfactory';\r\nimport {ValidatorRegistry} from './validatorregistry';\r\nimport { ExpressionCompilerFactory } from '../expression-compiler-factory';\r\nimport {ISchema} from './ISchema';\r\nimport { LogService } from '../log.service';\r\n\r\nexport class ArrayProperty extends PropertyGroup {\r\n\r\n  constructor(private formPropertyFactory: FormPropertyFactory,\r\n              schemaValidatorFactory: SchemaValidatorFactory,\r\n              validatorRegistry: ValidatorRegistry,\r\n              expressionCompilerFactory: ExpressionCompilerFactory,\r\n              schema: ISchema,\r\n              parent: PropertyGroup,\r\n              path: string,\r\n              logger: LogService) {\r\n    super(schemaValidatorFactory, validatorRegistry, expressionCompilerFactory, schema, parent, path, logger);\r\n  }\r\n\r\n  addItem(value: any = null): FormProperty {\r\n    let newProperty = this.addProperty();\r\n    newProperty.reset(value, false);\r\n    newProperty._bindVisibility();\r\n    return newProperty;\r\n  }\r\n\r\n  private addProperty() {\r\n    let itemSchema = this.schema.items\r\n    if (Array.isArray(this.schema.items)) {\r\n      const itemSchemas = this.schema.items as object[]\r\n      if (itemSchemas.length > (<FormProperty[]>this.properties).length) {\r\n        itemSchema = itemSchema[(<FormProperty[]>this.properties).length]\r\n      } else if (this.schema.additionalItems) {\r\n        itemSchema = this.schema.additionalItems\r\n      } else {\r\n        // souldn't add new items since schema is undefined for the item at its position\r\n        return null\r\n      }\r\n    }\r\n    let newProperty = this.formPropertyFactory.createProperty(itemSchema, this);\r\n    (<FormProperty[]>this.properties).push(newProperty);\r\n    return newProperty;\r\n  }\r\n\r\n  removeItem(item: FormProperty) {\r\n    this.properties = (<FormProperty[]>this.properties).filter(i => i !== item);\r\n    this.updateValueAndValidity(false, true);\r\n  }\r\n\r\n  setValue(value: any, onlySelf: boolean) {\r\n    this.createProperties();\r\n    this.resetProperties(value);\r\n    this.updateValueAndValidity(onlySelf, true);\r\n  }\r\n\r\n  public _hasValue(): boolean {\r\n    return true;\r\n  }\r\n\r\n  public _updateValue() {\r\n    this.reduceValue();\r\n  }\r\n\r\n  private reduceValue(): void {\r\n    const value = [];\r\n    this.forEachChild((property, _) => {\r\n      if (property.visible && property._hasValue()) {\r\n        value.push(property.value);\r\n      }\r\n    });\r\n    this._value = value;\r\n  }\r\n\r\n  reset(value: any, onlySelf = true) {\r\n    value = value || this.schema.default || [];\r\n    this.properties = [];\r\n    this.resetProperties(value);\r\n    this.updateValueAndValidity(onlySelf, true);\r\n  }\r\n\r\n  private createProperties() {\r\n    this.properties = [];\r\n  }\r\n\r\n\r\n  private resetProperties(value: any) {\r\n    for (let idx in value) {\r\n      if (value.hasOwnProperty(idx)) {\r\n        let property = this.addProperty();\r\n        property.reset(value[idx], true);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nPROPERTY_TYPE_MAPPING.array = (\r\n    schemaValidatorFactory: SchemaValidatorFactory,\r\n    validatorRegistry: ValidatorRegistry,\r\n    expressionCompilerFactory: ExpressionCompilerFactory,\r\n    schema: ISchema,\r\n    parent: PropertyGroup,\r\n    path: string,\r\n    formPropertyFactory: FormPropertyFactory,\r\n    logger: LogService\r\n) => {\r\n    return new ArrayProperty(\r\n        formPropertyFactory, schemaValidatorFactory, validatorRegistry, expressionCompilerFactory, schema, parent, path, logger);\r\n};\r\n","import {FormProperty} from './formproperty';\r\n\r\nexport abstract class AtomicProperty extends FormProperty {\r\n\r\n  setValue(value, onlySelf = false) {\r\n    this._value = value;\r\n    this.updateValueAndValidity(onlySelf, true);\r\n  }\r\n\r\n  reset(value: any = null, onlySelf = true) {\r\n    this.resetValue(value);\r\n    this.updateValueAndValidity(onlySelf, true);\r\n  }\r\n\r\n  resetValue(value: any): any {\r\n    if (value === null) {\r\n      if (this.schema.default !== undefined) {\r\n        value = this.schema.default;\r\n      } else {\r\n        value = this.fallbackValue();\r\n      }\r\n    }\r\n    this._value = value;\r\n  }\r\n\r\n  public _hasValue(): boolean {\r\n    return this.fallbackValue() !== this.value;\r\n  }\r\n\r\n  abstract fallbackValue(): any;\r\n\r\n  public _updateValue() {\r\n  }\r\n}\r\n","import {FormProperty} from './formproperty';\r\n\r\nexport interface Binding {\r\n  [eventName: string]: ((event: any, formProperty: FormProperty) => void) | ((event: any, formProperty: FormProperty) => void)[];\r\n}\r\n","import {Binding} from './binding';\r\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\r\nexport class BindingRegistry {\r\n  bindings: Binding[] = [];\r\n\r\n  clear() {\r\n    this.bindings = [];\r\n  }\r\n\r\n  register(path: string, binding: Binding | Binding[]) {\r\n    this.bindings[path] = [].concat(binding);\r\n  }\r\n\r\n  get(path: string): Binding[] {\r\n    return this.bindings[path];\r\n  }\r\n}\r\n","import { AtomicProperty } from './atomicproperty';\r\nimport { ValidatorRegistry, PropertyGroup } from '.';\r\nimport { ExpressionCompilerFactory } from '../expression-compiler-factory';\r\nimport { SchemaValidatorFactory } from '../schemavalidatorfactory';\r\nimport { PROPERTY_TYPE_MAPPING } from './typemapping';\r\nimport {ISchema} from './ISchema';\r\nimport { LogService } from '../log.service';\r\n\r\nexport class BooleanProperty extends AtomicProperty {\r\n\r\n  fallbackValue() {\r\n    return null;\r\n  }\r\n}\r\n\r\nPROPERTY_TYPE_MAPPING.boolean = (\r\n    schemaValidatorFactory: SchemaValidatorFactory,\r\n    validatorRegistry: ValidatorRegistry,\r\n    expressionCompilerFactory: ExpressionCompilerFactory,\r\n    schema: ISchema,\r\n    parent: PropertyGroup,\r\n    path: string,\r\n    logger: LogService\r\n) => {\r\n    return new BooleanProperty(schemaValidatorFactory, validatorRegistry, expressionCompilerFactory, schema, parent, path, logger);\r\n};\r\n","import {BehaviorSubject, combineLatest, Observable, of} from 'rxjs';\r\nimport {distinctUntilChanged, map} from 'rxjs/operators';\r\n\r\nimport {SchemaValidatorFactory} from '../schemavalidatorfactory';\r\nimport {ValidatorRegistry} from './validatorregistry';\r\nimport {PropertyBindingRegistry} from '../property-binding-registry';\r\nimport { ExpressionCompilerFactory, ExpressionCompilerVisibilityIf } from '../expression-compiler-factory';\r\nimport { ISchema, TSchemaPropertyType } from './ISchema';\r\nimport { LogService } from '../log.service';\r\nimport { FieldType } from '../template-schema/field/field';\r\nimport { isEmptyObject } from './utils';\r\n\r\nexport abstract class FormProperty {\r\n  public schemaValidator: Function;\r\n  public expressionCompilerVisibiltyIf: ExpressionCompilerVisibilityIf;\r\n\r\n  _value: any = null;\r\n  _errors: any = null;\r\n  private _valueChanges = new BehaviorSubject<any>(null);\r\n  private _errorsChanges = new BehaviorSubject<any>(null);\r\n  private _visible = true;\r\n  private _visibilityChanges = new BehaviorSubject<boolean>(true);\r\n  private _root: PropertyGroup;\r\n  private _parent: PropertyGroup;\r\n  private _path: string;\r\n  _propertyBindingRegistry: PropertyBindingRegistry;\r\n  __canonicalPath: string;\r\n  __canonicalPathNotation: string;\r\n\r\n  /**\r\n   * Provides the unique path of this form element.<br/>\r\n   * E.g.:\r\n   * <code>/garage/cars</code>,<br/>\r\n   * <code>/shop/book/0/page/1/</code>\r\n   */\r\n  get _canonicalPath() { return this.__canonicalPath; }\r\n  set _canonicalPath(canonicalPath: string) {\r\n    this.__canonicalPath = canonicalPath;\r\n    this.__canonicalPathNotation = (this.__canonicalPath||'')\r\n      .replace(new RegExp('^/', 'ig'), '')\r\n      .replace(new RegExp('/$', 'ig'), '')\r\n      .replace(new RegExp('/', 'ig'), '.');\r\n  }\r\n  /**\r\n   * Uses the unique path provided by the property <code>_canonicalPath</code><br/>\r\n   * but converts it to a HTML Element Attribute ID compliant format.<br/>\r\n   * E.g.:\r\n   * <code>garage.cars</code>,<br/>\r\n   * <code>shop.book.0.page.1.</code>\r\n   */\r\n  get canonicalPathNotation() { return this.__canonicalPathNotation; }\r\n\r\n  private _rootName;\r\n  /**\r\n   * Provides the HTML Element Attribute ID/NAME compliant representation\r\n   * of the root element.<br/>\r\n   * Represents the HTML FORM NAME.<br/>\r\n   * Only the root <code>FormProperty</code> will provide a value here.\r\n   */\r\n  get rootName() { return this._rootName; }\r\n\r\n  constructor(schemaValidatorFactory: SchemaValidatorFactory,\r\n              private validatorRegistry: ValidatorRegistry,\r\n              expressionCompilerFactory: ExpressionCompilerFactory,\r\n              public schema: ISchema,\r\n              parent: PropertyGroup,\r\n              path: string,\r\n              protected logger: LogService) {\r\n    this.schemaValidator = schemaValidatorFactory.createValidatorFn(this.schema);\r\n    this.expressionCompilerVisibiltyIf = expressionCompilerFactory.createExpressionCompilerVisibilityIf();\r\n\r\n    this._parent = parent;\r\n    if (parent) {\r\n      this._root = parent.root;\r\n    } else if (this instanceof PropertyGroup) {\r\n      this._root = <PropertyGroup><any>this;\r\n      this._rootName = this.createRootName();\r\n    }\r\n    this._path = path;\r\n  }\r\n\r\n  /**\r\n   * Creates the HTML ID and NAME attribute compliant string.\r\n   */\r\n  private createRootName(): string {\r\n    if (this.schema && this.schema['name']) {\r\n      return this._rootName = this.schema['name'].replace(new RegExp('[\\\\s]+', 'ig'), '_')\r\n    }\r\n    return '';\r\n  }\r\n\r\n  public get valueChanges() {\r\n    return this._valueChanges;\r\n  }\r\n\r\n  public get errorsChanges() {\r\n    return this._errorsChanges;\r\n  }\r\n\r\n  public get type(): TSchemaPropertyType {\r\n    return this.schema.type;\r\n  }\r\n\r\n  public get isNullableType(): boolean {\r\n    return Array.isArray(this.schema.type) && this.schema.type.some(type => type === FieldType.Null);\r\n  }\r\n\r\n  public get parent(): PropertyGroup {\r\n    return this._parent;\r\n  }\r\n\r\n  public get root(): PropertyGroup {\r\n    return this._root || <PropertyGroup><any>this;\r\n  }\r\n\r\n  public get path(): string {\r\n    return this._path;\r\n  }\r\n\r\n  public get value() {\r\n    return this._value;\r\n  }\r\n\r\n  public get visible() {\r\n    return this._visible;\r\n  }\r\n\r\n  public get valid() {\r\n    return this._errors === null;\r\n  }\r\n\r\n  public abstract setValue(value: any, onlySelf: boolean);\r\n\r\n  public abstract reset(value: any, onlySelf: boolean);\r\n\r\n  public updateValueAndValidity(onlySelf = false, emitEvent = true) {\r\n    this._updateValue();\r\n\r\n    if (emitEvent) {\r\n      this.valueChanges.next(this.value);\r\n    }\r\n\r\n    this._runValidation();\r\n\r\n    if (this.parent && !onlySelf) {\r\n      this.parent.updateValueAndValidity(onlySelf, emitEvent);\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  public abstract _hasValue(): boolean;\r\n\r\n  /**\r\n   *  @internal\r\n   */\r\n  public abstract _updateValue();\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  public _runValidation(): any {\r\n    let errors = this.schemaValidator(this._value) || [];\r\n    let customValidator = this.validatorRegistry.get(this.path);\r\n    if (customValidator) {\r\n      let customErrors = customValidator(this.value, this, this.findRoot());\r\n      errors = this.mergeErrors(errors, customErrors);\r\n    }\r\n    if (errors.length === 0) {\r\n      errors = null;\r\n    }\r\n\r\n    this._errors = errors;\r\n    this.setErrors(this._errors);\r\n  }\r\n\r\n  private mergeErrors(errors, newErrors) {\r\n    if (newErrors) {\r\n      if (Array.isArray(newErrors)) {\r\n        errors = errors.concat(...newErrors);\r\n      } else {\r\n        errors.push(newErrors);\r\n      }\r\n    }\r\n    return errors;\r\n  }\r\n\r\n  private setErrors(errors) {\r\n    this._errors = errors;\r\n    this._errorsChanges.next(errors);\r\n  }\r\n\r\n  public extendErrors(errors) {\r\n    errors = this.mergeErrors(this._errors || [], errors);\r\n    this.setErrors(errors);\r\n  }\r\n\r\n  searchProperty(path: string): FormProperty {\r\n    let prop: FormProperty = this;\r\n    let base: PropertyGroup = null;\r\n\r\n    let result = null;\r\n    if (path[0] === '/') {\r\n      base = this.findRoot();\r\n      result = base.getProperty(path.substr(1));\r\n    } else {\r\n      while (result === null && prop.parent !== null) {\r\n        prop = base = prop.parent;\r\n        result = base.getProperty(path);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public findRoot(): PropertyGroup {\r\n    let property: FormProperty = this;\r\n    while (property.parent !== null) {\r\n      property = property.parent;\r\n    }\r\n    return <PropertyGroup>property;\r\n  }\r\n\r\n  private setVisible(visible: boolean) {\r\n    this._visible = visible;\r\n    this._visibilityChanges.next(visible);\r\n    this.updateValueAndValidity();\r\n  }\r\n\r\n  /**\r\n   * Making use of the expression compiler for the <code>visibleIf</code> condition\r\n   * @param sourceProperty The source property where the `visibleIf` condition is set.\r\n   * @param targetProperty  The target property what provided the `value` on which the `visibleIf` condition will be checked against. May be `null` or `undefined`\r\n   * @param dependencyPath The dependency path of the `targetProperty`\r\n   * @param value The value of the `targetProperty` to check the `visiblityIf` condintion against. May be `null` or `undefined`\r\n   * @param expression The value or expression to check against the `value` for the `targetProperty`. May be `null` or `undefined`\r\n   */\r\n  private __evaluateVisibilityIf(\r\n    sourceProperty: FormProperty,\r\n    targetProperty: FormProperty,\r\n    dependencyPath: string,\r\n    value: any = '',\r\n    expression: string | string[] | number | number[] | boolean | boolean[]): boolean {\r\n    try {\r\n      let valid = false\r\n      const expArray = Array.isArray(expression) ? expression : [expression]\r\n      for (const expString of expArray) {\r\n        if (typeof expString === 'boolean') {\r\n          valid = !expString ? !value : value\r\n        } else if (typeof expString === 'number') {\r\n          valid = (!!value || value == 0) ? `${expString}` === `${value}` : false;\r\n        } else if (-1 !== `${expString}`.indexOf('$ANY$')) {\r\n          if(Array.isArray(value)) {\r\n            valid = value.length > 0;\r\n          } else if(typeof value === \"number\") {\r\n            valid = true;\r\n          } else if(typeof value === \"boolean\") {\r\n            valid = true;\r\n          } else if(typeof value === \"string\") {\r\n            valid = value !== '';\r\n          } else if(typeof value === \"object\") {\r\n            valid = !isEmptyObject(value);\r\n          }\r\n        } else if (0 === `${expString}`.indexOf('$EXP$')) {\r\n          const _expresssion = (expString as string).substring('$EXP$'.length);\r\n          valid = true === this.expressionCompilerVisibiltyIf.evaluate(_expresssion, {\r\n            source: sourceProperty,\r\n            target: targetProperty\r\n          })\r\n        } else if (Array.isArray(value)) {\r\n\t\t\t    valid = value.some((val) => `${val}` === `${expString}`);\r\n\t\t    } else {\r\n          valid = !!value ? `${expString}` === `${value}` : false;\r\n        }\r\n        if (valid) {\r\n          break\r\n        }\r\n      }\r\n      return valid\r\n    } catch (error) {\r\n      this.logger.error('Error processing \"VisibileIf\" expression for path: ', dependencyPath,\r\n        `source - ${(sourceProperty ? sourceProperty._canonicalPath : '<no-sourceProperty>')}: `, sourceProperty,\r\n        `target - ${(targetProperty ? targetProperty._canonicalPath : '<no-targetProperty>')}: `, targetProperty,\r\n        'value:', value,\r\n        'expression: ', expression,\r\n        'error: ', error)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * binds visibility conditions of type `oneOf` and `allOf`.\r\n   * @returns `true` if any visibility binding of type `oneOf` or `allOf` has been processed. Otherwise `false`.\r\n   */\r\n  private __bindVisibility_oneOf_or_allOf(): boolean {\r\n    /**\r\n     * <pre>\r\n     *     \"oneOf\":[{\r\n     *         \"path\":[\"value\",\"value\"]\r\n     *     },{\r\n     *         \"path\":[\"value\",\"value\"]\r\n     *     }]\r\n     * </pre>\r\n     * <pre>\r\n     *     \"allOf\":[{\r\n     *         \"path\":[\"value\",\"value\"]\r\n     *     },{\r\n     *         \"path\":[\"value\",\"value\"]\r\n     *     }]\r\n     * </pre>\r\n     */\r\n    // get the visibleIf property and check if it has a oneOf or allOf property\r\n    const visibleIfProperty = this.schema.visibleIf;\r\n    let oneOfOrAllOf;\r\n    if (visibleIfProperty) {\r\n      if (!!visibleIfProperty.oneOf) oneOfOrAllOf = visibleIfProperty.oneOf;\r\n      else if (!!visibleIfProperty.allOf) oneOfOrAllOf = visibleIfProperty.allOf;\r\n    }\r\n\r\n    // oneOf or allOf is set so this method handles the binding\r\n    if (visibleIfProperty && oneOfOrAllOf) {\r\n      const finalObservable: Observable<boolean> = this.__bindConditionalVisiblityChain(oneOfOrAllOf, !!visibleIfProperty.oneOf, !!visibleIfProperty.allOf);\r\n      // subscribe to the last observable which collects all temporary results\r\n      finalObservable.pipe(distinctUntilChanged()).subscribe((visible) => {\r\n        this.setVisible(visible);\r\n      });\r\n      return true;\r\n    }\r\n\r\n    // oneOf and allOf is not set. this method does not handle the logic\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * helper function to recursively bind visibilty in an arbitrary chain oneOf allOf chain\r\n   * @param visbilityElement The element from the visibitly chain. Can be an array from e.g. {\"oneOf\": [...]} or an element with one property for the dependency path e.g. {\"textField1\": ...}\r\n   * @param isOneOf Boolean to chain the oberservables as oneOf\r\n   * @param isAllOf Boolean to chain the oberservables as allOf\r\n   * @returns An Array with one\r\n   */\r\n  private __bindConditionalVisiblityChain(visbilityElement: any, isOneOf: boolean, isAllOf: boolean): Observable<boolean> {\r\n    // all observables are added to this array, if the element is oneOf or allOf\r\n    const visibiltyBindings: Array<Observable<boolean>> = [];\r\n\r\n    // oneOf or allOf = visibiltyElement must be an array\r\n    if (isOneOf || isAllOf) {\r\n      for (const objInOf of visbilityElement) {\r\n        // bind all elements recursively with the same function.\r\n        // objInOf must be an object, which may contain allOf or oneOf again but this is checked by the recursive call to this method\r\n        visibiltyBindings.push(this.__bindConditionalVisiblityChain(objInOf, false, false));\r\n      }\r\n      // visibiltyElement must be an obj, which may contain oneOf or allOf again\r\n    } else {\r\n      const containsOneOf = visbilityElement.hasOwnProperty(\"oneOf\");\r\n      const containsAllOf = visbilityElement.hasOwnProperty(\"allOf\");\r\n\r\n      let visibleIfOf: any = null;\r\n      if (containsOneOf) visibleIfOf = visbilityElement.oneOf;\r\n      else if (containsAllOf) visibleIfOf = visbilityElement.allOf;\r\n\r\n      // if oneOf or allOf is present check if it is an array with at least 1 element\r\n      if (visibleIfOf) {\r\n        // empty arrays just return boolean false\r\n        if (visibleIfOf.length == 0) return of(false);\r\n        // recursive call if visbilityElement has oneOf or allOf in it\r\n        return this.__bindConditionalVisiblityChain(visibleIfOf, containsOneOf, containsAllOf);\r\n      } else {\r\n        // it's a dependency path\r\n        const observables = this.__handleDependencyPath(visbilityElement);\r\n        return combineLatest(observables, (...values: boolean[]) => values.indexOf(true) !== -1);\r\n      }\r\n    }\r\n\r\n    // combine all observables to one boolean by using logical and or logical or. eventually return the observable\r\n    let ret;\r\n    if (isAllOf) ret = combineLatest(visibiltyBindings, (...values: boolean[]) => values.indexOf(false) === -1);\r\n    else if (isOneOf) ret = combineLatest(visibiltyBindings, (...values: boolean[]) => values.indexOf(true) !== -1);\r\n    return ret;\r\n  }\r\n\r\n  /**\r\n   * Handles a dependency path in a oneOf or allOf\r\n   * @param dependencyElement An element / object which contains neither a field with oneOf or allOf as name. Handled as dependency path in json\r\n   * @returns An oberservable boolean containing the evaluation of the statement, where the statement is the value of the dependency path field\r\n   */\r\n  private __handleDependencyPath(dependencyElement: any): Array<Observable<any>> {\r\n    const dependencyPath = Object.keys(dependencyElement)[0];\r\n\r\n    const propertiesBinding = [];\r\n    const properties = this.findProperties(this, dependencyPath);\r\n    if ((properties || []).length) {\r\n      for (const property of properties) {\r\n        if (property) {\r\n          let valueCheck;\r\n          const _chk = value => this.__evaluateVisibilityIf(this, property, dependencyPath, value, dependencyElement[dependencyPath]) ? true : false;\r\n\r\n          valueCheck = property.valueChanges.pipe(map(_chk));\r\n          const visibilityCheck = property._visibilityChanges;\r\n          const and = combineLatest([valueCheck, visibilityCheck], (v1, v2) => v1 && v2);\r\n          propertiesBinding.push(and);\r\n        }\r\n      }\r\n      return propertiesBinding;\r\n    } else {\r\n      this.logger.warn(\"Can't find property \" + dependencyPath + \" for visibility check of \" + this.path);\r\n      this.registerMissingVisibilityBinding(dependencyPath, this);\r\n    }\r\n    return [of(false)];\r\n  }\r\n\r\n  // A field is visible if AT LEAST ONE of the properties it depends on is visible AND has a value in the list\r\n  public _bindVisibility() {\r\n    if (this.__bindVisibility_oneOf_or_allOf())\r\n      return;\r\n    let visibleIf = this.schema.visibleIf;\r\n    if (typeof visibleIf === 'object' && Object.keys(visibleIf).length === 0) {\r\n      this.setVisible(false);\r\n    } else if (visibleIf !== undefined) {\r\n      let propertiesBinding = [];\r\n      for (let dependencyPath in visibleIf) {\r\n        if (visibleIf.hasOwnProperty(dependencyPath)) {\r\n          const properties = this.findProperties(this, dependencyPath);\r\n          if ((properties || []).length) {\r\n            for (const property of properties) {\r\n              if (property) {\r\n                const valueCheck = property.valueChanges.pipe(map(\r\n                  value => this.__evaluateVisibilityIf(this, property, dependencyPath, value, visibleIf[dependencyPath])\r\n                ));\r\n                const visibilityCheck = property._visibilityChanges;\r\n                const and = combineLatest([valueCheck, visibilityCheck], (v1, v2) => v1 && v2);\r\n                propertiesBinding.push(and);\r\n              }\r\n            }\r\n          } else {\r\n            this.logger.warn('Can\\'t find property ' + dependencyPath + ' for visibility check of ' + this.path);\r\n            this.registerMissingVisibilityBinding(dependencyPath, this);\r\n            // not visible if not existent\r\n            this.setVisible(false);\r\n          }\r\n        }\r\n      }\r\n\r\n      combineLatest(propertiesBinding, (...values: boolean[]) => {\r\n        return values.indexOf(true) !== -1;\r\n      }).pipe(distinctUntilChanged()).subscribe((visible) => {\r\n        this.setVisible(visible);\r\n      });\r\n    }\r\n  }\r\n\r\n  private registerMissingVisibilityBinding(dependencyPath: string, formProperty: FormProperty) {\r\n    formProperty._propertyBindingRegistry.getPropertyBindingsVisibility().add(dependencyPath, formProperty.path);\r\n  }\r\n\r\n\r\n  /**\r\n   * Finds all <code>formProperties</code> from a path with wildcards.<br/>\r\n   * e.g: <code>/garage/cars/&#42;/tires/&#42;/name</code><br/>\r\n   * @param target\r\n   * @param propertyPath\r\n   */\r\n  findProperties(target: FormProperty, propertyPath: string): FormProperty[] {\r\n    const props: FormProperty[] = [];\r\n    const paths = this.findPropertyPaths(target, propertyPath);\r\n    for (const path of paths) {\r\n      const p: FormProperty = target.searchProperty(path);\r\n      if (p) {\r\n        props.push(p);\r\n      }\r\n    }\r\n    return props;\r\n  }\r\n\r\n  /**\r\n   * Creates canonical paths from a path with wildcards.\r\n   * e.g:<br/>\r\n   * From:<br/>\r\n   * <code>/garage/cars/&#42;/tires/&#42;/name</code><br/>\r\n   * it creates:<br/>\r\n   * <code>/garage/cars/0/tires/0/name</code><br/>\r\n   * <code>/garage/cars/0/tires/1/name</code><br/>\r\n   * <code>/garage/cars/0/tires/2/name</code><br/>\r\n   * <code>/garage/cars/0/tires/3/name</code><br/>\r\n   * <code>/garage/cars/1/tires/0/name</code><br/>\r\n   * <code>/garage/cars/2/tires/1/name</code><br/>\r\n   * <code>/garage/cars/3/tires/2/name</code><br/>\r\n   * <code>/garage/cars/3/tires/3/name</code><br/>\r\n   * <code>/garage/cars/&#42;/tires/&#42;/name</code><br/>\r\n   * <code>/garage/cars/&#42;/tires/2/name</code><br/>\r\n   * <code>/garage/cars/&#42;/tires/3/name</code><br/>\r\n   * <br/>etc...\r\n   * @param target\r\n   * @param path\r\n   * @param parentPath\r\n   */\r\n  findPropertyPaths(target: FormProperty, path: string, parentPath?: string): string[] {\r\n    const ix = path.indexOf('*');\r\n    if (-1 !== ix) {\r\n      const prePath = ix > -1 ? path.substring(0, ix - 1) : path;\r\n      const subPath = ix > -1 ? path.substring(ix + 1) : path;\r\n      const prop: FormProperty = target.searchProperty(prePath);\r\n      let pathFound = [];\r\n      if (prop instanceof PropertyGroup) {\r\n        const arrProp = prop.properties as FormProperty[];\r\n        for (let i = 0; i < arrProp.length; i++) {\r\n          const curreItemPath = (parentPath || '') + prePath + (prePath.endsWith('/') ? '' : '/') + i + subPath;\r\n          const curreItemPrePath = (parentPath || '') + prePath + i;\r\n          if (-1 === curreItemPath.indexOf('*')) {\r\n            pathFound.push(curreItemPath);\r\n          }\r\n          const childrenPathFound = this.findPropertyPaths(arrProp[i], subPath, curreItemPrePath);\r\n          pathFound = pathFound.concat(childrenPathFound);\r\n        }\r\n      }\r\n      return pathFound;\r\n    }\r\n    return [path];\r\n  }\r\n}\r\n\r\nexport abstract class PropertyGroup extends FormProperty {\r\n\r\n  _properties: FormProperty[] | { [key: string]: FormProperty } = null;\r\n\r\n  get properties() {\r\n    return this._properties;\r\n  }\r\n\r\n  set properties(properties: FormProperty[] | { [key: string]: FormProperty }) {\r\n    /**\r\n     * Override the setter to add an observer that notices when an item is added or removed.<br/>\r\n     */\r\n    this._properties = new Proxy(properties, this._propertyProxyHandler);\r\n  }\r\n  \r\n  private _propertyProxyHandler = new ExtendedProxyHandler(this.logger)\r\n\r\n  getProperty(path: string) {\r\n    let subPathIdx = path.indexOf('/');\r\n    let propertyId = subPathIdx !== -1 ? path.substr(0, subPathIdx) : path;\r\n\r\n    let property = this.properties[propertyId];\r\n    if (property !== null && subPathIdx !== -1 && property instanceof PropertyGroup) {\r\n      let subPath = path.substr(subPathIdx + 1);\r\n      property = (<PropertyGroup>property).getProperty(subPath);\r\n    }\r\n    return property;\r\n  }\r\n\r\n  public forEachChild(fn: (formProperty: FormProperty, str: String) => void) {\r\n    for (let propertyId in this.properties) {\r\n      if (this.properties.hasOwnProperty(propertyId)) {\r\n        let property = this.properties[propertyId];\r\n        fn(property, propertyId);\r\n      }\r\n    }\r\n  }\r\n\r\n  public forEachChildRecursive(fn: (formProperty: FormProperty) => void) {\r\n    this.forEachChild((child) => {\r\n      fn(child);\r\n    });\r\n  }\r\n\r\n  public _bindVisibility() {\r\n    super._bindVisibility();\r\n    this._bindVisibilityRecursive();\r\n  }\r\n\r\n  private _bindVisibilityRecursive() {\r\n    this.forEachChildRecursive((property) => {\r\n      property._bindVisibility();\r\n    });\r\n  }\r\n\r\n  public isRoot() {\r\n    return this === this.root;\r\n  }\r\n}\r\n\r\n\r\nexport class ExtendedProxyHandler implements ProxyHandler<FormProperty[] | { [key: string]: FormProperty }> {\r\n  constructor(private logger: LogService) { }\r\n  /**\r\n   * When a new item is added it will be checked for visibility updates to proceed <br/>\r\n   * if any other field has a binding reference to it.<br/>\r\n   */\r\n  set(target: FormProperty[] | { [p: string]: FormProperty }, p: PropertyKey, value: any, receiver: any): boolean {\r\n\r\n    /**\r\n     * 1) Make sure a canonical path is set\r\n     */\r\n    const assertCanonicalPath = (propertyValue: any) => {\r\n      const formProperty = propertyValue as FormProperty;\r\n      if (Array.isArray(target) && propertyValue instanceof FormProperty) {\r\n        /**\r\n         * Create a canonical path replacing the last '*' with the elements position in array\r\n         * @param propertyPath\r\n         * @param indexOfChild\r\n         */\r\n        const getCanonicalPath = (propertyPath: string, indexOfChild: number) => {\r\n          let pos;\r\n          if (propertyPath && -1 !== (pos = propertyPath.lastIndexOf('*'))) {\r\n            return propertyPath.substring(0, pos) + indexOfChild.toString() + propertyPath.substring(pos + 1);\r\n          }\r\n        };\r\n        if (formProperty) {\r\n          formProperty._canonicalPath = getCanonicalPath(formProperty._canonicalPath, p as number);\r\n        }\r\n      }\r\n\r\n      const recalculateCanonicalPath = (formProperty: FormProperty) => {\r\n        if (!(formProperty instanceof PropertyGroup))\r\n          return\r\n        const propertyGroup = formProperty as PropertyGroup;\r\n        const propertyGroupChildren = (Array.isArray(propertyGroup.properties) ?\r\n          propertyGroup.properties :\r\n          Object.values(propertyGroup.properties || {})) as FormProperty[];\r\n        if (propertyGroupChildren.length || (formProperty.path || '').endsWith('/*')) {\r\n          /**\r\n           * If it is an array, then all children canonical paths must be computed now.\r\n           * The children don't have the parent's path segment set yet,\r\n           * because they are created before the parent gets attached to its parent.\r\n           */\r\n          for (const child of propertyGroupChildren) {\r\n            if (child.__canonicalPath.indexOf('*')) {\r\n              const p_path = formProperty._canonicalPath.split('/')\r\n              child._canonicalPath = p_path.concat(child._canonicalPath.split('/').splice(p_path.length)).join('/')\r\n            }\r\n            recalculateCanonicalPath(child)\r\n          }\r\n        }\r\n      }\r\n      recalculateCanonicalPath(formProperty)\r\n      const propertyGroup = formProperty as PropertyGroup;\r\n      const propertyGroupChildren = (Array.isArray(propertyGroup.properties) ?\r\n      propertyGroup.properties :\r\n      Object.values(propertyGroup.properties || {})) as FormProperty[];\r\n      return { property: formProperty, children: propertyGroupChildren };\r\n    };\r\n    const { property, children } = assertCanonicalPath(value);\r\n\r\n    /**\r\n     * 2) Add the new property before rebinding, so it can be found by <code>_bindVisibility</code>\r\n     */\r\n    const result = target[p as string] = value;\r\n\r\n    /**\r\n     * 3) Re-bind the visibility bindings referencing to this canonical paths\r\n     */\r\n    const rebindVisibility = () => {\r\n      const rebindAll = [property].concat(children);\r\n      const findPropertiesToRebind = (formProperty: FormProperty) => {\r\n        const propertyBindings = formProperty._propertyBindingRegistry.getPropertyBindingsVisibility();\r\n        let rebind: string[] = [];\r\n        if (formProperty._canonicalPath) {\r\n          rebind = rebind.concat(rebind.concat(propertyBindings.findByDependencyPath(formProperty._canonicalPath) || []));\r\n          if (formProperty._canonicalPath.startsWith('/')) {\r\n            rebind = rebind.concat(rebind.concat(propertyBindings.findByDependencyPath(formProperty._canonicalPath.substring(1)) || []));\r\n          }\r\n        }\r\n        rebind = rebind.concat(propertyBindings.findByDependencyPath(formProperty.path) || []);\r\n        if (formProperty.path.startsWith('/')) {\r\n          rebind = rebind.concat(rebind.concat(propertyBindings.findByDependencyPath(formProperty.path.substring(1)) || []));\r\n        }\r\n        const uniqueValues = {};\r\n        for (const item of rebind) {\r\n          uniqueValues[item] = item;\r\n        }\r\n        return Object.keys(uniqueValues);\r\n      };\r\n      for (const _property of rebindAll) {\r\n        if (_property instanceof FormProperty) {\r\n          try {\r\n            const rebindPaths = findPropertiesToRebind(_property);\r\n            for (const rebindPropPath of rebindPaths) {\r\n              const rebindProp = _property.searchProperty(rebindPropPath);\r\n              if (!rebindProp) {\r\n                this.logger.warn('Can\\'t find property to rebind visibility at path:', _property.path, 'property:', _property);\r\n              } else {\r\n                rebindProp._bindVisibility();\r\n              }\r\n            }\r\n          } catch (e) {\r\n            this.logger.error('Rebinding visibility error at path:', _property.path, 'property:', _property, e);\r\n          }\r\n        }\r\n      }\r\n    };\r\n    rebindVisibility();\r\n\r\n    return result;\r\n  }\r\n  get(target: FormProperty[] | { [p: string]: FormProperty }, p: PropertyKey, receiver: any): any {\r\n    return target[p as string];\r\n  }\r\n  deleteProperty(target: FormProperty[] | { [p: string]: FormProperty }, p: PropertyKey): boolean {\r\n    return delete target[p as string];\r\n  }\r\n}\r\n","import { FormProperty, PropertyGroup } from './formproperty';\r\nimport { SchemaValidatorFactory } from '../schemavalidatorfactory';\r\nimport { ValidatorRegistry } from './validatorregistry';\r\nimport { PropertyBindingRegistry } from '../property-binding-registry';\r\nimport { ExpressionCompilerFactory } from '../expression-compiler-factory';\r\nimport { PROPERTY_TYPE_MAPPING } from './typemapping';\r\nimport { ISchema, TSchemaPropertyType } from './ISchema';\r\nimport { LogService } from '../log.service';\r\nimport { TNullableFieldType, FieldType } from '../template-schema/field/field';\r\n\r\nexport class FormPropertyFactory {\r\n\r\n  constructor(private schemaValidatorFactory: SchemaValidatorFactory, private validatorRegistry: ValidatorRegistry,\r\n              private propertyBindingRegistry: PropertyBindingRegistry,\r\n              private expressionCompilerFactory: ExpressionCompilerFactory,\r\n              private logger: LogService) {\r\n  }\r\n\r\n  createProperty(schema: ISchema, parent: PropertyGroup = null, propertyId?: string): FormProperty {\r\n    let newProperty = null;\r\n    let path = '';\r\n    let _canonicalPath = '';\r\n    if (parent) {\r\n      path += parent.path;\r\n      if (parent.parent !== null) {\r\n        path += '/';\r\n        _canonicalPath += '/';\r\n      }\r\n      if (parent.type === 'object') {\r\n        path += propertyId;\r\n        _canonicalPath += propertyId;\r\n      } else if (parent.type === 'array') {\r\n        path += '*';\r\n        _canonicalPath += '*';\r\n      } else {\r\n        throw new Error('Instanciation of a FormProperty with an unknown parent type: ' + parent.type);\r\n      }\r\n      _canonicalPath = (parent._canonicalPath || parent.path) + _canonicalPath;\r\n    } else {\r\n      path = '/';\r\n      _canonicalPath = '/';\r\n    }\r\n\r\n    if (schema.$ref) {\r\n      const refSchema = this.schemaValidatorFactory.getSchema(parent.root.schema, schema.$ref);\r\n      newProperty = this.createProperty(refSchema, parent, path);\r\n    } else {\r\n      const type: FieldType = this.isUnionType(schema.type) && this.isValidNullableUnionType(schema.type as TNullableFieldType)\r\n          ? this.extractTypeFromNullableUnionType(schema.type as TNullableFieldType)\r\n          :  schema.type as FieldType;\r\n\r\n      if (PROPERTY_TYPE_MAPPING[type]) {\r\n        if (type === 'object' || type === 'array') {\r\n          newProperty = PROPERTY_TYPE_MAPPING[type](\r\n          this.schemaValidatorFactory, this.validatorRegistry, this.expressionCompilerFactory, schema, parent, path, this, this.logger);\r\n        } else {\r\n          newProperty = PROPERTY_TYPE_MAPPING[type](\r\n          this.schemaValidatorFactory, this.validatorRegistry, this.expressionCompilerFactory, schema, parent, path, this.logger);\r\n        }\r\n      } else {\r\n        throw new TypeError(`Undefined type ${type} (existing: ${Object.keys(PROPERTY_TYPE_MAPPING)})`);\r\n      }\r\n    }\r\n\r\n    newProperty._propertyBindingRegistry = this.propertyBindingRegistry;\r\n    newProperty._canonicalPath = _canonicalPath;\r\n\r\n    if (newProperty instanceof PropertyGroup) newProperty.reset(null, true);\r\n\r\n    return newProperty;\r\n  }\r\n\r\n  private isUnionType(unionType: TSchemaPropertyType): boolean {\r\n    return Array.isArray(unionType) && unionType.length > 1;\r\n  }\r\n\r\n  private isValidNullableUnionType(unionType: TNullableFieldType): boolean {\r\n    if (!unionType.some(subType => subType === FieldType.Null)) {\r\n      throw new TypeError(`Unsupported union type ${unionType}. Supports only nullable union types, for example [\"string\", \"null\"]`);\r\n    }\r\n\r\n    if (unionType.length !== 2) {\r\n      throw new TypeError(`Unsupported count of types in nullable union type ${unionType}. Supports only two types one of the which should be \"null\"`);\r\n    }\r\n\r\n    const type = this.extractTypeFromNullableUnionType(unionType);\r\n\r\n    if (!type || [FieldType.Object, FieldType.Array].includes(type)) {\r\n      throw new TypeError(`Unsupported second type ${type} for nullable union. Allowed types are \"${FieldType.Number}\", \"${FieldType.Integer}\", \"${FieldType.Boolean}\", \"${FieldType.String}\"`);\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  private extractTypeFromNullableUnionType(unionType: TNullableFieldType): FieldType | undefined {\r\n    return unionType.filter(type => type !== 'null')?.[0] as FieldType | undefined;\r\n  }\r\n}\r\n","export * from './action';\r\nexport * from './actionregistry';\r\n\r\nexport * from './binding';\r\nexport * from './bindingregistry';\r\n\r\nexport * from './formpropertyfactory';\r\nexport * from './formproperty';\r\nexport * from './atomicproperty';\r\nexport * from './objectproperty';\r\nexport * from './arrayproperty';\r\nexport * from './stringproperty';\r\nexport * from './booleanproperty';\r\nexport * from './numberproperty';\r\nexport * from './nullproperty';\r\n\r\nexport * from './validator';\r\nexport * from './validatorregistry';\r\n\r\nexport * from './schemapreprocessor';\r\nexport * from './typemapping';\r\n\r\nexport * from './ISchema';\r\n","import { AtomicProperty } from './atomicproperty';\r\nimport { ValidatorRegistry, PropertyGroup } from '.';\r\nimport { ExpressionCompilerFactory } from '../expression-compiler-factory';\r\nimport { SchemaValidatorFactory } from '../schemavalidatorfactory';\r\nimport { PROPERTY_TYPE_MAPPING } from './typemapping';\r\nimport {ISchema} from './ISchema';\r\nimport { LogService } from '../log.service';\r\n\r\nexport class NullProperty extends AtomicProperty {\r\n  fallbackValue() {\r\n    return null;\r\n  }\r\n}\r\n\r\nPROPERTY_TYPE_MAPPING.null = (\r\n    schemaValidatorFactory: SchemaValidatorFactory,\r\n    validatorRegistry: ValidatorRegistry,\r\n    expressionCompilerFactory: ExpressionCompilerFactory,\r\n    schema: ISchema,\r\n    parent: PropertyGroup,\r\n    path: string,\r\n    logger: LogService\r\n) => {\r\n    return new NullProperty(schemaValidatorFactory, validatorRegistry, expressionCompilerFactory, schema, parent, path, logger);\r\n};\r\n","import {AtomicProperty} from './atomicproperty';\r\nimport { ValidatorRegistry, PropertyGroup } from '.';\r\nimport { ExpressionCompilerFactory } from '../expression-compiler-factory';\r\nimport { SchemaValidatorFactory } from '../schemavalidatorfactory';\r\nimport { PROPERTY_TYPE_MAPPING } from './typemapping';\r\nimport {ISchema} from './ISchema';\r\nimport { LogService } from '../log.service';\r\n\r\nexport class NumberProperty extends AtomicProperty {\r\n\r\n  fallbackValue() {\r\n    return null;\r\n  }\r\n\r\n  setValue(value, onlySelf = false) {\r\n    if (typeof value === 'string') {\r\n      if (value.length) {\r\n        value = value.indexOf('.') > -1 ? parseFloat(value) : parseInt(value, 10);\r\n      } else {\r\n        value = null;\r\n      }\r\n    }\r\n    this._value = value;\r\n    this.updateValueAndValidity(onlySelf, true);\r\n  }\r\n}\r\n\r\nPROPERTY_TYPE_MAPPING.integer = (\r\n    schemaValidatorFactory: SchemaValidatorFactory,\r\n    validatorRegistry: ValidatorRegistry,\r\n    expressionCompilerFactory: ExpressionCompilerFactory,\r\n    schema: ISchema,\r\n    parent: PropertyGroup,\r\n    path: string,\r\n    logger: LogService\r\n) => {\r\n    return new NumberProperty(schemaValidatorFactory, validatorRegistry, expressionCompilerFactory, schema, parent, path, logger);\r\n};\r\n\r\n PROPERTY_TYPE_MAPPING.number = (\r\n    schemaValidatorFactory: SchemaValidatorFactory,\r\n    validatorRegistry: ValidatorRegistry,\r\n    expressionCompilerFactory: ExpressionCompilerFactory,\r\n    schema: ISchema,\r\n    parent: PropertyGroup,\r\n    path: string,\r\n    logger: LogService\r\n) => {\r\n    return new NumberProperty(schemaValidatorFactory, validatorRegistry, expressionCompilerFactory, schema, parent, path, logger);\r\n};\r\n","import { PROPERTY_TYPE_MAPPING } from './typemapping';\r\nimport {PropertyGroup} from './formproperty';\r\nimport {FormPropertyFactory} from './formpropertyfactory';\r\nimport {SchemaValidatorFactory} from '../schemavalidatorfactory';\r\nimport {ValidatorRegistry} from './validatorregistry';\r\nimport { ExpressionCompilerFactory } from '../expression-compiler-factory';\r\nimport {ISchema} from './ISchema';\r\nimport { LogService } from '../log.service';\r\n\r\nexport class ObjectProperty extends PropertyGroup {\r\n\r\n  private propertiesId: string[] = [];\r\n\r\n  constructor(private formPropertyFactory: FormPropertyFactory,\r\n              schemaValidatorFactory: SchemaValidatorFactory,\r\n              validatorRegistry: ValidatorRegistry,\r\n              expressionCompilerFactory: ExpressionCompilerFactory,\r\n              schema: ISchema,\r\n              parent: PropertyGroup,\r\n              path: string,\r\n              logger: LogService) {\r\n    super(schemaValidatorFactory, validatorRegistry, expressionCompilerFactory, schema, parent, path, logger);\r\n    this.createProperties();\r\n  }\r\n\r\n  setValue(value: any, onlySelf: boolean) {\r\n    for (const propertyId in value) {\r\n      if (value.hasOwnProperty(propertyId)) {\r\n        this.properties[propertyId].setValue(value[propertyId], true);\r\n      }\r\n    }\r\n    this.updateValueAndValidity(onlySelf, true);\r\n  }\r\n\r\n  reset(value: any, onlySelf = true) {\r\n    value = value || this.schema.default || {};\r\n    this.resetProperties(value);\r\n    this.updateValueAndValidity(onlySelf, true);\r\n  }\r\n\r\n  resetProperties(value: any) {\r\n    for (const propertyId in this.schema.properties) {\r\n      if (this.schema.properties.hasOwnProperty(propertyId)) {\r\n        this.properties[propertyId].reset(value[propertyId], true);\r\n      }\r\n    }\r\n  }\r\n\r\n  createProperties() {\r\n    this.properties = {};\r\n    this.propertiesId = [];\r\n    for (const propertyId in this.schema.properties) {\r\n      if (this.schema.properties.hasOwnProperty(propertyId)) {\r\n        const propertySchema = this.schema.properties[propertyId];\r\n        this.properties[propertyId] = this.formPropertyFactory.createProperty(propertySchema, this, propertyId);\r\n        this.propertiesId.push(propertyId);\r\n      }\r\n    }\r\n  }\r\n\r\n  public _hasValue(): boolean {\r\n    return !!Object.keys(this.value).length;\r\n  }\r\n\r\n  public _updateValue() {\r\n    this.reduceValue();\r\n  }\r\n\r\n  public _runValidation() {\r\n    super._runValidation();\r\n\r\n    if (this._errors) {\r\n      this._errors.forEach(error => {\r\n        const prop = this.searchProperty(error.path.slice(1));\r\n        if (prop) {\r\n          prop.extendErrors(error);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private reduceValue(): void {\r\n    const value = {};\r\n    this.forEachChild((property, propertyId: string) => {\r\n      if (property.visible && property._hasValue()) {\r\n        value[propertyId] = property.value;\r\n      }\r\n    });\r\n    this._value = value;\r\n  }\r\n}\r\n\r\nPROPERTY_TYPE_MAPPING.object = (\r\n    schemaValidatorFactory: SchemaValidatorFactory,\r\n    validatorRegistry: ValidatorRegistry,\r\n    expressionCompilerFactory: ExpressionCompilerFactory,\r\n    schema: ISchema,\r\n    parent: PropertyGroup,\r\n    path: string,\r\n    formPropertyFactory: FormPropertyFactory,\r\n    logger: LogService\r\n) => {\r\n    return new ObjectProperty(\r\n        formPropertyFactory, schemaValidatorFactory, validatorRegistry, expressionCompilerFactory, schema, parent, path, logger);\r\n};\r\n","import {isBlank} from './utils';\r\nimport {Injectable} from '@angular/core';\r\nimport {ISchema} from './ISchema';\r\nimport {FieldType} from '../template-schema/field/field';\r\n\r\nfunction formatMessage(message, path) {\r\n  return `Parsing error on ${path}: ${message}`;\r\n}\r\n\r\nfunction schemaError(message, path): void {\r\n  let mesg = formatMessage(message, path);\r\n  throw new Error(mesg);\r\n}\r\n\r\nfunction schemaWarning(message, path): void {\r\n  let mesg = formatMessage(message, path);\r\n  throw new Error(mesg);\r\n}\r\n\r\n@Injectable()\r\nexport class SchemaPreprocessor {\r\n\r\n  static preprocess(jsonSchema: ISchema, path = '/'): any {\r\n    jsonSchema = jsonSchema || {};\r\n    SchemaPreprocessor.normalizeExtensions(jsonSchema);\r\n    if (jsonSchema.type === 'object') {\r\n      SchemaPreprocessor.checkProperties(jsonSchema, path);\r\n      SchemaPreprocessor.checkAndCreateFieldsets(jsonSchema, path);\r\n    } else if (jsonSchema.type === 'array') {\r\n      SchemaPreprocessor.checkItems(jsonSchema, path);\r\n    }\r\n    SchemaPreprocessor.normalizeWidget(jsonSchema);\r\n    SchemaPreprocessor.recursiveCheck(jsonSchema, path);\r\n  }\r\n\r\n  private static checkProperties(jsonSchema, path: string) {\r\n    if (isBlank(jsonSchema.properties)) {\r\n      jsonSchema.properties = {};\r\n      schemaWarning('Provided json schema does not contain a \\'properties\\' entry. Output schema will be empty', path);\r\n    }\r\n  }\r\n\r\n  private static checkAndCreateFieldsets(jsonSchema: any, path: string) {\r\n    if (jsonSchema.fieldsets === undefined) {\r\n      if (jsonSchema.order !== undefined) {\r\n        SchemaPreprocessor.replaceOrderByFieldsets(jsonSchema);\r\n      } else {\r\n        SchemaPreprocessor.createFieldsets(jsonSchema);\r\n      }\r\n    }\r\n    SchemaPreprocessor.checkFieldsUsage(jsonSchema, path);\r\n  }\r\n\r\n  private static checkFieldsUsage(jsonSchema: ISchema, path: string) {\r\n    let fieldsId: string[] = Object.keys(jsonSchema.properties);\r\n    let usedFields = {};\r\n    for (let fieldset of jsonSchema.fieldsets) {\r\n      for (let fieldId of fieldset.fields) {\r\n        if (usedFields[fieldId] === undefined) {\r\n          usedFields[fieldId] = [];\r\n        }\r\n        usedFields[fieldId].push(fieldset.id);\r\n      }\r\n    }\r\n\r\n    for (const fieldId of fieldsId) {\r\n      const isRequired = jsonSchema.required && jsonSchema.required.indexOf(fieldId) > -1;\r\n      if (isRequired && jsonSchema.properties[fieldId]) {\r\n        jsonSchema.properties[fieldId].isRequired = true;\r\n      }\r\n      if (usedFields.hasOwnProperty(fieldId)) {\r\n        if (usedFields[fieldId].length > 1) {\r\n          schemaError(`${fieldId} is referenced by more than one fieldset: ${usedFields[fieldId]}`, path);\r\n        }\r\n        delete usedFields[fieldId];\r\n      } else if (isRequired) {\r\n        schemaError(`${fieldId} is a required field but it is not referenced as part of a 'order' or a 'fieldset' property`, path);\r\n      } else {\r\n        delete jsonSchema[fieldId];\r\n        schemaWarning(`Removing unreferenced field ${fieldId}`, path);\r\n      }\r\n    }\r\n\r\n    for (let remainingfieldsId in usedFields) {\r\n      if (usedFields.hasOwnProperty(remainingfieldsId)) {\r\n        schemaWarning(`Referencing non-existent field ${remainingfieldsId} in one or more fieldsets`, path);\r\n      }\r\n    }\r\n  }\r\n\r\n  private static createFieldsets(jsonSchema: ISchema) {\r\n    jsonSchema.order = Object.keys(jsonSchema.properties);\r\n    SchemaPreprocessor.replaceOrderByFieldsets(jsonSchema);\r\n  }\r\n\r\n  private static replaceOrderByFieldsets(jsonSchema: ISchema) {\r\n    jsonSchema.fieldsets = [{\r\n      id: 'fieldset-default',\r\n      title: jsonSchema.title || '',\r\n      description: jsonSchema.description || '',\r\n      name: jsonSchema.name || '',\r\n      fields: jsonSchema.order\r\n    }];\r\n    delete jsonSchema.order;\r\n  }\r\n\r\n  private static normalizeWidget(fieldSchema: ISchema) {\r\n    let widget = fieldSchema.widget;\r\n    if (widget === undefined) {\r\n      widget = {'id': fieldSchema.type};\r\n    } else if (typeof widget === 'string') {\r\n      widget = {'id': widget};\r\n    }\r\n    fieldSchema.widget = widget;\r\n  }\r\n\r\n  private static checkItems(jsonSchema: ISchema, path) {\r\n    if (jsonSchema.items === undefined) {\r\n      schemaError('No \\'items\\' property in array', path);\r\n    }\r\n  }\r\n\r\n  private static recursiveCheck(jsonSchema: ISchema, path: string) {\r\n    if (jsonSchema.type === FieldType.Object) {\r\n      for (let fieldId in jsonSchema.properties) {\r\n        if (jsonSchema.properties.hasOwnProperty(fieldId)) {\r\n          let fieldSchema = jsonSchema.properties[fieldId];\r\n          SchemaPreprocessor.preprocess(fieldSchema, path + fieldId + '/');\r\n        }\r\n      }\r\n      if (jsonSchema.hasOwnProperty('definitions')) {\r\n        for (let fieldId in jsonSchema.definitions) {\r\n          if (jsonSchema.definitions.hasOwnProperty(fieldId)) {\r\n            let fieldSchema = jsonSchema.definitions[fieldId];\r\n            SchemaPreprocessor.removeRecursiveRefProperties(fieldSchema, `#/definitions/${fieldId}`);\r\n            SchemaPreprocessor.preprocess(fieldSchema, path + fieldId + '/');\r\n          }\r\n        }\r\n      }\r\n    } else if (jsonSchema.type === 'array') {\r\n      if (Array.isArray(jsonSchema.items || {})) {\r\n        for (let i = 0; i < jsonSchema.items.length; i++) {\r\n          SchemaPreprocessor.preprocess(jsonSchema.items[i], path + '*/');\r\n        }\r\n      } else {\r\n        SchemaPreprocessor.preprocess(jsonSchema.items, path + '*/');\r\n      }\r\n      if (jsonSchema.additionalItems) {\r\n        SchemaPreprocessor.preprocess(jsonSchema.additionalItems, path + '*/');\r\n      }\r\n    }\r\n  }\r\n\r\n  private static removeRecursiveRefProperties(jsonSchema: ISchema, definitionPath) {\r\n    // to avoid infinite loop\r\n    if (jsonSchema.type === FieldType.Object) {\r\n      for (let fieldId in jsonSchema.properties) {\r\n        if (jsonSchema.properties.hasOwnProperty(fieldId)) {\r\n          if (jsonSchema.properties[fieldId].$ref\r\n            && jsonSchema.properties[fieldId].$ref === definitionPath) {\r\n            delete jsonSchema.properties[fieldId];\r\n          } else if (jsonSchema.properties[fieldId].type === 'object') {\r\n            SchemaPreprocessor.removeRecursiveRefProperties(jsonSchema.properties[fieldId], definitionPath);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Enables alias names for JSON schema extensions.\r\n   *\r\n   * Copies the value of each alias JSON schema property\r\n   * to the JSON schema property of ngx-schema-form.\r\n   *\r\n   * @param schema JSON schema to enable alias names.\r\n   */\r\n  private static normalizeExtensions(schema: ISchema): void {\r\n    const extensions = [\r\n        { name: \"fieldsets\", regex: /^x-?field-?sets$/i },\r\n        { name: \"widget\",    regex: /^x-?widget$/i },\r\n        { name: \"visibleIf\", regex: /^x-?visible-?if$/i }\r\n    ];\r\n    const keys = Object.keys(schema);\r\n    for (let i = 0; i < keys.length; ++i) {\r\n      let k = keys[i];\r\n      let e = extensions.find(e => !!k.match(e.regex));\r\n      if (e) {\r\n        let v = schema[k];\r\n        let copy = JSON.parse(JSON.stringify(v));\r\n        schema[e.name] = copy;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n","import { AtomicProperty } from './atomicproperty';\r\nimport { PROPERTY_TYPE_MAPPING } from './typemapping';\r\nimport { PropertyGroup } from './formproperty';\r\nimport { ExpressionCompilerFactory } from '../expression-compiler-factory';\r\nimport { ValidatorRegistry } from './validatorregistry';\r\nimport { SchemaValidatorFactory } from '../schemavalidatorfactory';\r\nimport {ISchema} from './ISchema';\r\nimport { LogService } from '../log.service';\r\n\r\nexport class StringProperty extends AtomicProperty {\r\n\r\n  fallbackValue() {\r\n    return this.isNullableType ? null : '';\r\n  }\r\n\r\n}\r\n\r\nPROPERTY_TYPE_MAPPING.string = (\r\n    schemaValidatorFactory: SchemaValidatorFactory,\r\n    validatorRegistry: ValidatorRegistry,\r\n    expressionCompilerFactory: ExpressionCompilerFactory,\r\n    schema: ISchema,\r\n    parent: PropertyGroup,\r\n    path: string,\r\n    logger: LogService\r\n) => {\r\n    return new StringProperty(schemaValidatorFactory, validatorRegistry, expressionCompilerFactory, schema, parent, path, logger);\r\n};\r\n","import { FieldType } from '../template-schema/field/field';\r\n\r\nexport type TPropertyTypeMapping = { [type in FieldType]?: any };\r\n\r\nexport const PROPERTY_TYPE_MAPPING: TPropertyTypeMapping  = {};\r\n","export type TUnorderedPair<TFirst, TSecond> = [TFirst, TSecond] | [TSecond, TFirst];\r\n\r\nexport function isPresent(o) {\r\n  return o !== null && o !== undefined;\r\n}\r\n\r\nexport function isBlank(o) {\r\n  return o === null || o === undefined;\r\n}\r\n\r\nexport function isEmptyObject(o) {\r\n  for (var i in o) return true;\r\n  return false;\r\n}","import { FormProperty, PropertyGroup } from './formproperty';\r\n\r\nexport interface Validator {\r\n  (value: any, formProperty: FormProperty, form: PropertyGroup): [{[key: string]: any}];\r\n}\r\n","import { Validator } from './validator';\r\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\r\nexport class ValidatorRegistry {\r\n  private validators: Validator[] = [];\r\n\r\n  register(path: string, validator: Validator) {\r\n    this.validators[path] = validator;\r\n  }\r\n\r\n  get(path: string): Validator {\r\n    return this.validators[path];\r\n  }\r\n\r\n  clear() {\r\n    this.validators = [];\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\n/**\r\n * General purpose propery binding registry\r\n */\r\n@Injectable()\r\nexport class PropertyBindingRegistry {\r\n\r\n  private bindings: { [key: string]: PropertyBindings } = {};\r\n\r\n  getPropertyBindings(type: PropertyBindingTypes): PropertyBindings {\r\n    this.bindings[type] = this.bindings[type] || new PropertyBindings();\r\n    return this.bindings[type];\r\n  }\r\n\r\n  getPropertyBindingsVisibility() {\r\n    return this.getPropertyBindings(PropertyBindingTypes.visibility);\r\n  }\r\n}\r\n\r\n/**\r\n * Defines the types of supported property bindings.<br/>\r\n * For now only <code>visibility</code> is supported.<br/>\r\n */\r\nexport enum PropertyBindingTypes {\r\n  visibility\r\n}\r\n\r\n/**\r\n * Storage that holds all bindings that are property paths related.<br/>\r\n */\r\nexport class PropertyBindings {\r\n  sourcesIndex: SimplePropertyIndexer = new SimplePropertyIndexer();\r\n  dependenciesIndex: SimplePropertyIndexer = new SimplePropertyIndexer();\r\n\r\n  add(dependencyPath: string, sourcePropertyPath: string) {\r\n    this.sourcesIndex.store(sourcePropertyPath, dependencyPath);\r\n    this.dependenciesIndex.store(dependencyPath, sourcePropertyPath);\r\n  }\r\n\r\n  findByDependencyPath(dependencyPath: string): string[] {\r\n    const result = this.dependenciesIndex.find(dependencyPath);\r\n    result.results = result.results || [];\r\n    let values = [];\r\n    for (const res of result.results) {\r\n      values = values.concat(Object.keys(res.value));\r\n    }\r\n    return result.found ? values : [];\r\n  }\r\n\r\n  getBySourcePropertyPath(sourcePropertyPath: string): string[] {\r\n    const result = this.sourcesIndex.find(sourcePropertyPath);\r\n    result.results = result.results || [];\r\n    let values = [];\r\n    for (const res of result.results) {\r\n      values = values.concat(Object.keys(res.value));\r\n    }\r\n    return result.found ? values : [];\r\n  }\r\n\r\n  createPathIndex(path: string): string[] {\r\n    return path.split('/');\r\n  }\r\n}\r\n\r\n/**\r\n * Simple indexer to store property paths\r\n */\r\nexport class SimplePropertyIndexer {\r\n\r\n  static MARKER = '$____value';\r\n  index: object = {};\r\n  findOnlyWithValue = true;\r\n\r\n  private _createPathIndex(path: string) {\r\n    return path\r\n      .replace(new RegExp('//', 'g'), '/')\r\n      .replace(new RegExp('^/', 'g'), '')\r\n      .split('/').filter(item => item);\r\n  }\r\n\r\n  store(propertyPath: string, value?: any) {\r\n    this._storeIndex(this._createPathIndex(propertyPath), value);\r\n  }\r\n\r\n  private _storeIndex(pathIndex: string[], value?: string) {\r\n    let indexPos = this.index;\r\n    for (const key of pathIndex) {\r\n      indexPos[key] = indexPos[key] || {};\r\n      indexPos = indexPos[key];\r\n    }\r\n    if (indexPos && value) {\r\n      indexPos[SimplePropertyIndexer.MARKER] = indexPos[SimplePropertyIndexer.MARKER] || {};\r\n      indexPos[SimplePropertyIndexer.MARKER][value] = value;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Find path in index.<br/>\r\n   * Will find path like:<br/>\r\n   * <ul>\r\n   *     <li>/property/0/prop</li>\r\n   *     <li>/property/0/prop/2/test</li>\r\n   *     <li>/property/0/prop/&#42;/test</li>\r\n   *     <li>/property/&#42;/prop/1/test</li>\r\n   *     <li>/property/&#42;/prop/&#42;/test</li>\r\n   *     <li>/property/1/prop/&#42;/test</li>\r\n   *  </ul>\r\n   * @param path\r\n   */\r\n  find(path: string): IndexerResult {\r\n    return this._findInIndex(this._createPathIndex(path));\r\n  }\r\n\r\n  _findInIndex(path: string[]): IndexerResult {\r\n    const ixRes: IndexerResult = {target: path, found: false, results: []};\r\n    this.__findIndex(ixRes, path, this.index, []);\r\n    return ixRes;\r\n  }\r\n\r\n  __findIndex(indexerResults: IndexerResult, path: string[], index: object, parent?: string[]) {\r\n\r\n    const p = parent || [];\r\n    const segment = path[0];\r\n    const wild = ('*' === segment) ? Object.keys(index) : [];\r\n    const _keys = ((Array.isArray(segment) ? segment : [segment]) as string[]).concat(wild);\r\n    const keys = _keys.filter((item, pos) => '*' !== item && _keys.indexOf(item) === pos); // remove duplicates\r\n\r\n    if (index['*']) {\r\n      keys.push('*');\r\n    }\r\n\r\n    let paths = [];\r\n    for (const key of keys) {\r\n      const restPath = path.slice(1);\r\n      const restIndex = index[key];\r\n      const restParent = p.concat(key);\r\n\r\n      if (path.length === 1) {// collect only the full paths\r\n        if (!this.findOnlyWithValue || (restIndex && restIndex[SimplePropertyIndexer.MARKER])) {\r\n          indexerResults.results = indexerResults.results || [];\r\n          indexerResults.results.push({\r\n            path: restParent,\r\n            value: restIndex[SimplePropertyIndexer.MARKER]\r\n          });\r\n          paths.push(restParent);\r\n          indexerResults.found = indexerResults.results.length > 0;\r\n        }\r\n      }\r\n\r\n      if (!restPath || !restPath.length || !restIndex) {\r\n        break;\r\n      }\r\n      const restPaths = this.__findIndex(indexerResults, restPath, restIndex, restParent);\r\n\r\n      paths = paths.concat(restPaths);\r\n    }\r\n    return paths;\r\n  }\r\n\r\n}\r\n\r\nexport interface IndexerResult {\r\n  /**\r\n   * The path originally searched for\r\n   */\r\n  target: string[];\r\n  /**\r\n   * Flag for the status of found or not found.<br/>\r\n   * Usually <code>results</code> will be empty if no matches found.\r\n   */\r\n  found: boolean;\r\n  /**\r\n   * The result path and values from the index search.<br/>\r\n   * Usually <code>results</code> will be empty if no matches found.\r\n   */\r\n  results: {\r\n    /**\r\n     * The path that matched the <code>target</code>\r\n     * separated in segments\r\n     */\r\n    path: string[],\r\n    /**\r\n     * The value stored at the <code>path</code>\r\n     */\r\n    value: any\r\n  }[];\r\n}\r\n","import {NgModule, ModuleWithProviders} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {\r\n  FormsModule,\r\n  ReactiveFormsModule\r\n} from '@angular/forms';\r\n\r\nimport {FormElementComponent} from './formelement.component';\r\nimport {FormComponent} from './form.component';\r\nimport {WidgetChooserComponent} from './widgetchooser.component';\r\nimport {ArrayWidget} from './defaultwidgets/array/array.widget';\r\nimport {ButtonWidget} from './defaultwidgets/button/button.widget';\r\nimport {ObjectWidget} from './defaultwidgets/object/object.widget';\r\nimport {CheckboxWidget} from './defaultwidgets/checkbox/checkbox.widget';\r\nimport {FileWidget} from './defaultwidgets/file/file.widget';\r\nimport {IntegerWidget} from './defaultwidgets/integer/integer.widget';\r\nimport {TextAreaWidget} from './defaultwidgets/textarea/textarea.widget';\r\nimport {RadioWidget} from './defaultwidgets/radio/radio.widget';\r\nimport {RangeWidget} from './defaultwidgets/range/range.widget';\r\nimport {SelectWidget} from './defaultwidgets/select/select.widget';\r\nimport {StringWidget} from './defaultwidgets/string/string.widget';\r\nimport {DefaultWidgetRegistry} from './defaultwidgets/defaultwidgetregistry';\r\nimport {DisableControlDirective} from './defaultwidgets/_directives/disableControl.directive';\r\n\r\nimport {\r\n  DefaultWidget\r\n} from './default.widget';\r\n\r\nimport {WidgetRegistry} from './widgetregistry';\r\nimport {SchemaValidatorFactory, ZSchemaValidatorFactory} from './schemavalidatorfactory';\r\nimport {FormElementComponentAction} from './formelement.action.component';\r\nimport {ExpressionCompilerFactory, JEXLExpressionCompilerFactory} from './expression-compiler-factory';\r\n\r\nimport { LOG_LEVEL, LogLevel, LogService, DefaultLogService } from './log.service';\r\n\r\nconst moduleProviders = [\r\n  {\r\n    provide: WidgetRegistry,\r\n    useClass: DefaultWidgetRegistry\r\n  },\r\n  {\r\n    provide: SchemaValidatorFactory,\r\n    useClass: ZSchemaValidatorFactory\r\n  },\r\n  {\r\n    provide: ExpressionCompilerFactory,\r\n    useClass: JEXLExpressionCompilerFactory\r\n  },\r\n  {\r\n    provide: LOG_LEVEL,\r\n    useValue: LogLevel.off\r\n  },\r\n  {\r\n    provide: LogService,\r\n    useClass: DefaultLogService\r\n  }\r\n];\r\n\r\n@NgModule({\r\n    imports: [CommonModule, FormsModule, ReactiveFormsModule],\r\n    declarations: [\r\n        FormElementComponent,\r\n        FormElementComponentAction,\r\n        FormComponent,\r\n        WidgetChooserComponent,\r\n        DefaultWidget,\r\n        ArrayWidget,\r\n        ButtonWidget,\r\n        ObjectWidget,\r\n        CheckboxWidget,\r\n        FileWidget,\r\n        IntegerWidget,\r\n        TextAreaWidget,\r\n        RadioWidget,\r\n        RangeWidget,\r\n        SelectWidget,\r\n        StringWidget,\r\n        DisableControlDirective\r\n    ],\r\n    exports: [\r\n        FormComponent,\r\n        FormElementComponent,\r\n        FormElementComponentAction,\r\n        WidgetChooserComponent,\r\n        ArrayWidget,\r\n        ButtonWidget,\r\n        ObjectWidget,\r\n        CheckboxWidget,\r\n        FileWidget,\r\n        IntegerWidget,\r\n        TextAreaWidget,\r\n        RadioWidget,\r\n        RangeWidget,\r\n        SelectWidget,\r\n        StringWidget,\r\n        DisableControlDirective\r\n    ]\r\n})\r\nexport class SchemaFormModule {\r\n\r\n  static forRoot(): ModuleWithProviders<SchemaFormModule> {\r\n    return {\r\n      ngModule: SchemaFormModule,\r\n      providers: [...moduleProviders]\r\n    };\r\n  }\r\n\r\n}\r\n","import ZSchema from 'z-schema';\r\nimport {Injectable} from '@angular/core';\r\nimport {ISchema} from './model/ISchema';\r\nimport {FieldType} from './template-schema/field/field';\r\n\r\nexport abstract class SchemaValidatorFactory {\r\n  abstract createValidatorFn(schema): (value: any) => any;\r\n\r\n  abstract getSchema(schema, ref): any;\r\n\r\n  /**\r\n   * Override this method to reset the schema validator instance.<br/>\r\n   * This may be required since some schema validators keep a deep copy<br/>\r\n   * of your schemas and changes at runtime are not recognized by the schema validator.<br/>\r\n   * In this method you should either re-instantiate the schema validator or\r\n   * clear its cache.<br/>\r\n   * Example of re-instantiating schema validator\r\n   * <code>\r\n   *     reset(){\r\n   *         this.zschema = new ZSchema({})\r\n   *     }\r\n   * </code>\r\n   * <br/>\r\n   * Since this method it self does nothing there is <br/>\r\n   * no need to call the <code>super.reset()</code>\r\n   */\r\n  reset() {\r\n\r\n  }\r\n\r\n  /**\r\n   * Override this method if the validator instance supports compiling a schema an resolve all refs and defs.\r\n   * @param schema The schema to be compiled and get its refs, deps, etc. resolved\r\n   * @returns The compiled schema. Per default it does simply return the give schema.\r\n   */\r\n  compile(schema:any){\r\n    return schema\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class ZSchemaValidatorFactory extends SchemaValidatorFactory {\r\n\r\n  protected zschema;\r\n\r\n  constructor() {\r\n    super();\r\n    this.createSchemaValidator();\r\n  }\r\n\r\n  private createSchemaValidator() {\r\n    this.zschema =  new ZSchema({\r\n      breakOnFirstError: false\r\n    });\r\n  }\r\n\r\n  reset() {\r\n    this.createSchemaValidator();\r\n  }\r\n\r\n  compile(schema: any) {\r\n    const zSchema = new ZSchema({}) as any;\r\n    zSchema.compileSchema(schema);\r\n    return zSchema.getResolvedSchema(schema);\r\n  }\r\n\r\n  createValidatorFn(schema: ISchema) {\r\n    return (value): { [key: string]: boolean } => {\r\n\r\n      if (schema.type === FieldType.Number || schema.type === FieldType.Integer) {\r\n        value = +value;\r\n      }\r\n\r\n      this.zschema.validate(value, schema);\r\n      // tslint:disable-next-line:prefer-const\r\n      let err = this.zschema.getLastErrors();\r\n\r\n      this.denormalizeRequiredPropertyPaths(err);\r\n\r\n      return err || null;\r\n    };\r\n  }\r\n\r\n  getSchema(schema: any, ref: string) {\r\n    // check definitions are valid\r\n    const isValid = this.zschema.compileSchema(schema);\r\n    if (isValid) {\r\n      return this.getDefinition(schema, ref);\r\n    } else {\r\n      throw this.zschema.getLastError();\r\n    }\r\n  }\r\n\r\n  private denormalizeRequiredPropertyPaths(err: any[]) {\r\n    if (err && err.length) {\r\n      err = err.map(error => {\r\n        if (error.path === '#/' && error.code === 'OBJECT_MISSING_REQUIRED_PROPERTY') {\r\n          error.path = `${error.path}${error.params[0]}`;\r\n        }\r\n        return error;\r\n      });\r\n    }\r\n  }\r\n\r\n  private getDefinition(schema: any, ref: string) {\r\n    let foundSchema = schema;\r\n    ref.split('/').slice(1).forEach(ptr => {\r\n      if (ptr) {\r\n        foundSchema = foundSchema[ptr];\r\n      }\r\n    });\r\n    return foundSchema;\r\n  }\r\n}\r\n\r\n","import {\r\n  Component,\r\n  AfterContentInit,\r\n  Input,\r\n  Output,\r\n  ElementRef,\r\n  EventEmitter,\r\n  forwardRef\r\n} from '@angular/core';\r\n\r\nimport { TemplateSchemaElement } from '../template-schema-element';\r\n\r\n\r\n@Component({\r\n  selector: 'sf-button',\r\n  templateUrl: './button.component.html',\r\n  providers: [\r\n    {\r\n      provide: TemplateSchemaElement,\r\n      useExisting: forwardRef(() => ButtonComponent),\r\n    }\r\n  ]\r\n})\r\nexport class ButtonComponent extends TemplateSchemaElement implements AfterContentInit {\r\n\r\n  @Input()\r\n  id: string;\r\n\r\n  @Input()\r\n  label = '';\r\n\r\n  @Input()\r\n  widget: string | object;\r\n\r\n  @Output()\r\n  click = new EventEmitter<any>();\r\n\r\n  constructor(private elementRef: ElementRef) {\r\n    super();\r\n  }\r\n\r\n  private setLabelFromContent() {\r\n    const textContent = this.getTextContent(this.elementRef);\r\n\r\n    // label as @Input takes priority over content text\r\n    if (textContent && !this.label) {\r\n      this.label = textContent;\r\n    }\r\n\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this.setLabelFromContent();\r\n  }\r\n\r\n}\r\n","<ng-content></ng-content>\r\n","import { QueryList } from '@angular/core';\r\n\r\nimport { Validator } from '../../model/validator';\r\nimport { ActionRegistry } from '../../model/actionregistry';\r\nimport { ButtonComponent } from '../button/button.component';\r\nimport { TemplateSchemaElement } from '../template-schema-element';\r\n\r\nimport { Field, FieldType, TNullableFieldType } from './field';\r\nimport {ISchema} from '../../model/ISchema';\r\n\r\nexport abstract class FieldParent extends TemplateSchemaElement {\r\n\r\n  name = '';\r\n  type: FieldType | TNullableFieldType;\r\n\r\n  get path(): string {\r\n    if (!this.name) {\r\n      return '';\r\n    }\r\n\r\n    return '/' + this.name;\r\n  }\r\n\r\n  protected abstract actionRegistry: ActionRegistry;\r\n  protected abstract childButtons: QueryList<ButtonComponent>;\r\n\r\n\r\n  getButtons(): { id: string, label: string, widget?: string | object }[] {\r\n\r\n    return this.childButtons.map((button, index) => {\r\n\r\n      if (!button.id) {\r\n        const randomString = Math.random().toString(16).substr(2, 8);\r\n        // generate id for button\r\n        button.id = this.name + randomString + '_'  + (index + 1);\r\n      }\r\n\r\n      // register as button action the EventEmitter click\r\n      this.actionRegistry.register(\r\n        button.id,\r\n        button.click.emit.bind(button.click)\r\n      );\r\n\r\n      const _button = <any>{\r\n        id: button.id,\r\n        label: button.label,\r\n      };\r\n\r\n      if (button.widget) {\r\n        _button.widget = button.widget;\r\n      }\r\n\r\n      return _button;\r\n\r\n    });\r\n  }\r\n\r\n  protected getFieldsValidators(\r\n    fields: Field[]\r\n  ): { path: string, validator: Validator }[] {\r\n\r\n    return fields.reduce((validators, field) => {\r\n      return validators.concat(field.getValidators());\r\n    }, []);\r\n\r\n  }\r\n\r\n  protected getFieldsSchema(fields: Field[]): ISchema {\r\n    return fields.reduce((schema: ISchema, field: Field) => {\r\n\r\n      switch (this.type) {\r\n        case FieldType.Array:\r\n          schema.items = field.getSchema();\r\n          break;\r\n\r\n        default:\r\n          if (!schema.properties) {\r\n            schema.properties = {};\r\n          }\r\n\r\n          schema.properties[field.name] = field.getSchema();\r\n          break;\r\n      }\r\n\r\n      const buttons = field.getButtons();\r\n      if (buttons.length > 0) {\r\n        schema.buttons = buttons;\r\n      }\r\n\r\n      if (!field.required) {\r\n        return schema;\r\n      }\r\n\r\n      if (!schema.required) {\r\n        schema.required = [];\r\n      }\r\n      schema.required.push(field.name);\r\n      return schema;\r\n    }, {});\r\n  }\r\n\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  AfterContentInit,\r\n  ContentChildren,\r\n  QueryList,\r\n  ElementRef,\r\n  SimpleChanges,\r\n  OnChanges,\r\n  forwardRef,\r\n} from \"@angular/core\";\r\n\r\nimport { ActionRegistry } from \"../../model/actionregistry\";\r\nimport { Validator } from \"../../model/validator\";\r\n\r\nimport { TemplateSchemaService } from \"../template-schema.service\";\r\nimport { ButtonComponent } from \"../button/button.component\";\r\n\r\nimport { FieldParent } from \"./field-parent\";\r\nimport { FieldType, Field, TNullableFieldType } from \"./field\";\r\nimport { ItemComponent } from \"./item/item.component\";\r\nimport { merge } from \"rxjs\";\r\nimport { ISchema } from \"../../model/ISchema\";\r\n\r\n@Component({\r\n  selector: \"sf-field\",\r\n  templateUrl: \"./field.component.html\",\r\n})\r\nexport class FieldComponent\r\n  extends FieldParent\r\n  implements Field, OnChanges, AfterContentInit\r\n{\r\n  @ContentChildren(forwardRef(() => FieldComponent))\r\n  childFields: QueryList<FieldComponent>;\r\n\r\n  @ContentChildren(ItemComponent)\r\n  childItems: QueryList<ItemComponent>;\r\n\r\n  @ContentChildren(ButtonComponent)\r\n  childButtons: QueryList<ButtonComponent>;\r\n\r\n  @Input()\r\n  name: string;\r\n\r\n  @Input()\r\n  type: FieldType | TNullableFieldType = FieldType.String;\r\n\r\n  @Input()\r\n  format: string;\r\n\r\n  @Input()\r\n  required: boolean;\r\n\r\n  @Input()\r\n  readOnly: boolean;\r\n\r\n  @Input()\r\n  title: string;\r\n\r\n  @Input()\r\n  description: string;\r\n\r\n  @Input()\r\n  placeholder: string;\r\n\r\n  @Input()\r\n  widget: string | object;\r\n\r\n  @Input()\r\n  validator: Validator;\r\n\r\n  @Input()\r\n  schema: ISchema = {};\r\n\r\n  constructor(\r\n    private elementRef: ElementRef,\r\n    private templateSchemaService: TemplateSchemaService,\r\n    protected actionRegistry: ActionRegistry\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  getSchema(): ISchema {\r\n    const { properties, items, required } = this.getFieldsSchema(\r\n      this.childFields.filter((field) => field !== this)\r\n    );\r\n\r\n    const oneOf = this.getOneOf();\r\n\r\n    const schema: ISchema = {\r\n      type: this.type,\r\n    };\r\n\r\n    if (this.title !== undefined) {\r\n      schema.title = this.title;\r\n    }\r\n\r\n    if (properties !== undefined) {\r\n      schema.properties = properties;\r\n    }\r\n\r\n    if (items !== undefined) {\r\n      schema.items = items;\r\n    }\r\n\r\n    // requried child fields\r\n    if (required !== undefined) {\r\n      schema.required = required;\r\n    }\r\n\r\n    if (oneOf !== undefined) {\r\n      schema.oneOf = oneOf;\r\n    }\r\n\r\n    if (this.description !== undefined) {\r\n      schema.description = this.description;\r\n    }\r\n\r\n    if (this.placeholder !== undefined) {\r\n      schema.placeholder = this.placeholder;\r\n    }\r\n\r\n    if (this.format !== undefined) {\r\n      schema.format = this.format;\r\n    }\r\n\r\n    if (this.widget !== undefined) {\r\n      schema.widget = this.widget;\r\n    }\r\n\r\n    if (this.readOnly !== undefined) {\r\n      schema.readOnly = this.readOnly;\r\n    }\r\n\r\n    const buttons = this.getButtons();\r\n    if (buttons.length > 0) {\r\n      schema.buttons = buttons;\r\n    }\r\n\r\n    // @Input schema takes precedence\r\n    return Object.assign(schema, this.schema);\r\n  }\r\n\r\n  getValidators(): { path: string; validator: Validator }[] {\r\n    // registering validator here is not possible since prop full path is needed\r\n    const childValidators = this.getFieldsValidators(\r\n      this.childFields.filter((field) => field !== this)\r\n    );\r\n    const validators = childValidators.map(({ path, validator }) => {\r\n      return {\r\n        path: this.path + path,\r\n        validator,\r\n      };\r\n    });\r\n\r\n    if (!this.validator) {\r\n      return validators;\r\n    }\r\n\r\n    validators.push({ path: this.path, validator: this.validator });\r\n    return validators;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const keys = Object.keys(changes);\r\n    if (keys.length > 0) {\r\n      for (const key of keys) {\r\n        if (!changes[key].isFirstChange()) {\r\n          // on any input change, force schema change generation\r\n          this.templateSchemaService.changed();\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private getOneOf() {\r\n    if (this.childItems.length === 0) {\r\n      return;\r\n    }\r\n\r\n    const items = this.childItems.map(({ value, description }) => {\r\n      if (!Array.isArray(value)) {\r\n        return { enum: [value], description };\r\n      }\r\n\r\n      return { enum: value, description };\r\n    });\r\n\r\n    if (items.length === 0) {\r\n      return;\r\n    }\r\n\r\n    return items;\r\n  }\r\n\r\n  private setTitleFromContent() {\r\n    const textContent = this.getTextContent(this.elementRef);\r\n\r\n    //  title as @Input takes priority over content text\r\n    if (textContent && !this.title) {\r\n      this.title = textContent;\r\n    }\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    // cache it\r\n    this.setTitleFromContent();\r\n\r\n    merge(\r\n      this.childFields.changes,\r\n      this.childItems.changes,\r\n      this.childButtons.changes\r\n    ).subscribe(() => this.templateSchemaService.changed());\r\n  }\r\n}\r\n","<ng-content ></ng-content>\r\n","import { Validator } from '../../model/validator';\r\nimport {ISchema} from '../../model/ISchema';\r\nimport { TUnorderedPair } from '../../model/utils';\r\n\r\nexport enum FieldType {\r\n  String = 'string',\r\n  Object = 'object',\r\n  Array = 'array',\r\n  Boolean = 'boolean',\r\n  Integer =  'integer',\r\n  Number = 'number',\r\n  Null = 'null',\r\n}\r\n\r\nexport type TNullableFieldType = TUnorderedPair<\r\n  FieldType.Null,\r\n  FieldType.String | FieldType.Number | FieldType.Boolean | FieldType.Integer\r\n>;\r\n\r\nexport interface Field {\r\n  name: string;\r\n  required: boolean;\r\n  getSchema(): ISchema;\r\n  getButtons(): any;\r\n  getValidators(): { path: string, validator: Validator }[];\r\n}\r\n\r\n\r\n","import {\r\n Component,\r\n ElementRef,\r\n Input,\r\n OnInit,\r\n} from '@angular/core';\r\n\r\nimport { TemplateSchemaElement } from '../../template-schema-element';\r\n\r\n\r\n@Component({\r\n  selector: 'sf-item',\r\n  templateUrl: './item.component.html'\r\n})\r\nexport class ItemComponent extends TemplateSchemaElement implements OnInit {\r\n\r\n  @Input()\r\n  value: any;\r\n\r\n  description: string;\r\n\r\n  constructor(private elementRef: ElementRef) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.description = this.getTextContent(this.elementRef);\r\n  }\r\n\r\n}\r\n","<ng-content></ng-content>\r\n","export * from \"./button/button.component\";\r\nexport * from \"./field/item/item.component\";\r\nexport * from \"./field/field-parent\";\r\nexport * from \"./field/field.component\";\r\nexport * from \"./field/field\";\r\nexport * from \"./template-schema-element\";\r\nexport * from \"./template-schema.directive\";\r\nexport * from \"./template-schema.module\";\r\nexport * from \"./template-schema.service\";\r\n","import { ElementRef } from '@angular/core';\r\n\r\nexport class TemplateSchemaElement {\r\n\r\n  getTextContent(elementRef: ElementRef): string {\r\n    const nodes = Array.from(elementRef.nativeElement.childNodes);\r\n    const node = <HTMLElement>nodes.filter((el: HTMLElement) => {\r\n      return el.nodeType === el.TEXT_NODE;\r\n    }).pop();\r\n\r\n    if (!node || !node.nodeValue) {\r\n      return '';\r\n    }\r\n\r\n    return node.nodeValue.trim();\r\n  }\r\n\r\n}\r\n","import {\r\n  Directive,\r\n  ContentChildren,\r\n  QueryList,\r\n  AfterContentInit,\r\n  SimpleChange,\r\n} from '@angular/core';\r\nimport { merge } from 'rxjs';\r\n\r\nimport { FormComponent } from '../form.component';\r\nimport { ActionRegistry } from '../model/actionregistry';\r\nimport { ValidatorRegistry } from '../model/validatorregistry';\r\nimport { TerminatorService } from '../terminator.service';\r\n\r\nimport { TemplateSchemaService } from './template-schema.service';\r\nimport { FieldComponent } from './field/field.component';\r\nimport { FieldType } from './field/field';\r\nimport { ButtonComponent } from './button/button.component';\r\nimport { FieldParent } from './field/field-parent';\r\nimport {ISchema} from '../model/ISchema';\r\n\r\n\r\n@Directive({\r\n  selector: 'sf-form[templateSchema]',\r\n  providers: [\r\n    TemplateSchemaService\r\n  ]\r\n})\r\nexport class TemplateSchemaDirective extends FieldParent implements AfterContentInit {\r\n\r\n  @ContentChildren(FieldComponent)\r\n  childFields: QueryList<FieldComponent>;\r\n\r\n  @ContentChildren(ButtonComponent)\r\n  childButtons: QueryList<ButtonComponent>;\r\n\r\n  constructor(\r\n    protected actionRegistry: ActionRegistry,\r\n    protected validatorRegistry: ValidatorRegistry,\r\n    private formComponent: FormComponent,\r\n    private terminatorService: TerminatorService,\r\n    private templateSchemaService: TemplateSchemaService\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  setFormDocumentSchema(fields: FieldComponent[]) {\r\n      this.actionRegistry.clear();\r\n      this.validatorRegistry.clear();\r\n\r\n      const schema: ISchema = this.getFieldsSchema(fields);\r\n\r\n      const validators = this.getFieldsValidators(fields);\r\n      validators.forEach(({ path, validator }) => {\r\n        this.validatorRegistry.register(path, validator);\r\n      });\r\n\r\n      const previousSchema: ISchema = this.formComponent.schema;\r\n      this.formComponent.schema = {\r\n        type: FieldType.Object,\r\n        properties: schema.properties\r\n      };\r\n\r\n      if (schema.required && schema.required.length > 0) {\r\n        this.formComponent.schema.requred = schema.required;\r\n      }\r\n\r\n      const buttons = this.getButtons();\r\n      if (buttons.length > 0) {\r\n        this.formComponent.schema.buttons = buttons;\r\n      }\r\n\r\n      this.formComponent.ngOnChanges({\r\n        schema: new SimpleChange(\r\n          previousSchema,\r\n          this.formComponent.schema,\r\n          Boolean(previousSchema)\r\n        )\r\n      });\r\n\r\n  }\r\n\r\n\r\n  ngAfterContentInit() {\r\n\r\n    if (this.childFields.length > 0) {\r\n      this.setFormDocumentSchema(this.childFields.toArray());\r\n    }\r\n\r\n    merge(\r\n      this.childFields.changes,\r\n      this.templateSchemaService.changes\r\n    )\r\n   .subscribe(() => {\r\n      this.terminatorService.destroy();\r\n      this.setFormDocumentSchema(this.childFields.toArray());\r\n    });\r\n\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { FieldComponent } from './field/field.component';\r\nimport { TemplateSchemaDirective } from './template-schema.directive';\r\nimport { ButtonComponent } from './button/button.component';\r\nimport { ItemComponent } from './field/item/item.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [\r\n    TemplateSchemaDirective,\r\n    FieldComponent,\r\n    ButtonComponent,\r\n    ItemComponent\r\n  ],\r\n  exports: [\r\n    TemplateSchemaDirective,\r\n    FieldComponent,\r\n    ButtonComponent,\r\n    ItemComponent\r\n  ]\r\n})\r\nexport class TemplateSchemaModule { }\r\n","import { Injectable, EventEmitter } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class TemplateSchemaService {\r\n\r\n  changes = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  changed() {\r\n    this.changes.emit();\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class TerminatorService {\r\n  public onDestroy: Subject<boolean>;\r\n\r\n  constructor() {\r\n    this.onDestroy = new Subject();\r\n  }\r\n\r\n  destroy() {\r\n    this.onDestroy.next(true);\r\n  }\r\n}\r\n","import { AfterViewInit, Directive } from \"@angular/core\";\r\nimport { UntypedFormControl } from \"@angular/forms\";\r\n\r\nimport { ArrayProperty } from \"./model/arrayproperty\";\r\nimport { FormProperty } from \"./model/formproperty\";\r\nimport { ObjectProperty } from \"./model/objectproperty\";\r\nimport { ISchema } from \"./model/ISchema\";\r\n\r\nexport abstract class Widget<T extends FormProperty> {\r\n  formProperty: T;\r\n  control: UntypedFormControl;\r\n  errorMessages: string[];\r\n\r\n  id: string = \"\";\r\n  name: string = \"\";\r\n  schema: ISchema = {};\r\n}\r\n\r\n@Directive()\r\nexport class ControlWidget\r\n  extends Widget<FormProperty>\r\n  implements AfterViewInit {\r\n  ngAfterViewInit() {\r\n    const control = this.control;\r\n    this.formProperty.valueChanges.subscribe((newValue) => {\r\n      if (control.value !== newValue) {\r\n        control.setValue(newValue, { emitEvent: false });\r\n      }\r\n    });\r\n    this.formProperty.errorsChanges.subscribe((errors) => {\r\n      control.setErrors(errors, { emitEvent: true });\r\n      const messages = (errors || [])\r\n        .filter((e) => {\r\n          return e.path && e.path.slice(1) === this.formProperty.path;\r\n        })\r\n        .map((e) => e.message);\r\n      this.errorMessages = messages.filter((m, i) => messages.indexOf(m) === i);\r\n    });\r\n    control.valueChanges.subscribe((newValue) => {\r\n      this.formProperty.setValue(newValue, false);\r\n    });\r\n  }\r\n}\r\n\r\n@Directive()\r\nexport class ArrayLayoutWidget\r\n  extends Widget<ArrayProperty>\r\n  implements AfterViewInit {\r\n  ngAfterViewInit() {\r\n    const control = this.control;\r\n    this.formProperty.errorsChanges.subscribe((errors) => {\r\n      control.setErrors(errors, { emitEvent: true });\r\n    });\r\n  }\r\n}\r\n\r\n@Directive()\r\nexport class ObjectLayoutWidget\r\n  extends Widget<ObjectProperty>\r\n  implements AfterViewInit {\r\n  ngAfterViewInit() {\r\n    const control = this.control;\r\n    this.formProperty.errorsChanges.subscribe((errors) => {\r\n      control.setErrors(errors, { emitEvent: true });\r\n    });\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  ComponentRef,\r\n  ChangeDetectorRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  Output,\r\n  ViewChild,\r\n  ViewContainerRef,\r\n  OnInit,\r\n  OnDestroy\r\n} from '@angular/core';\r\nimport { TerminatorService } from './terminator.service';\r\nimport { WidgetFactory } from './widgetfactory';\r\nimport { Subscription } from 'rxjs';\r\n\r\n\r\n@Component({\r\n  selector: 'sf-widget-chooser',\r\n  template: `<div #target></div>`,\r\n})\r\nexport class WidgetChooserComponent implements OnInit, OnChanges, OnDestroy {\r\n\r\n  @Input() widgetInfo: any;\r\n\r\n  @Output() widgetInstanciated = new EventEmitter<any>();\r\n\r\n  @ViewChild('target', { read: ViewContainerRef, static: true }) container: ViewContainerRef;\r\n\r\n  private widgetInstance: any;\r\n  private ref: ComponentRef<any>;\r\n  private subs: Subscription;\r\n\r\n  constructor(\r\n    private widgetFactory: WidgetFactory = null,\r\n    private cdr: ChangeDetectorRef,\r\n    private terminator: TerminatorService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.subs = this.terminator.onDestroy.subscribe(destroy => {\r\n      if (destroy) {\r\n        this.ref.destroy();\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.ref = this.widgetFactory.createWidget(this.container, this.widgetInfo.id);\r\n    this.widgetInstanciated.emit(this.ref.instance);\r\n    this.widgetInstance = this.ref.instance;\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subs.unsubscribe();\r\n  }\r\n}\r\n","import {\r\n  ViewContainerRef,\r\n  ComponentRef,\r\n  ComponentFactoryResolver,\r\n  Injectable\r\n} from '@angular/core';\r\n\r\nimport { WidgetRegistry } from './widgetregistry';\r\n\r\n@Injectable()\r\nexport class WidgetFactory {\r\n\r\n  private resolver: ComponentFactoryResolver;\r\n  private registry: WidgetRegistry;\r\n\r\n  constructor(registry: WidgetRegistry, resolver: ComponentFactoryResolver) {\r\n    this.registry = registry;\r\n    this.resolver = resolver;\r\n  }\r\n\r\n  createWidget(container: ViewContainerRef, type: string): ComponentRef<any> {\r\n    let componentClass = this.registry.getWidgetType(type);\r\n\r\n    let componentFactory = this.resolver.resolveComponentFactory(componentClass);\r\n    return container.createComponent(componentFactory);\r\n  }\r\n}\r\n","export class WidgetRegistry {\r\n\r\n  private widgets: { [type: string]: any } = {};\r\n\r\n  private defaultWidget: any;\r\n\r\n  constructor() { }\r\n\r\n  setDefaultWidget(widget: any) {\r\n    this.defaultWidget = widget;\r\n  }\r\n\r\n  getDefaultWidget() {\r\n    return this.defaultWidget;\r\n  }\r\n\r\n  hasWidget(type: string) {\r\n    return this.widgets.hasOwnProperty(type);\r\n  }\r\n\r\n  register(type: string, widget: any) {\r\n    this.widgets[type] = widget;\r\n  }\r\n\r\n  getWidgetType(type: string): any {\r\n    if (this.hasWidget(type)) {\r\n      return this.widgets[type];\r\n    }\r\n    return this.defaultWidget;\r\n  }\r\n}\r\n","import { Component, ViewEncapsulation, OnInit } from '@angular/core';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { filter } from 'rxjs/operators';\r\n\r\nimport { AppService } from './app.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n  page: string;\r\n  schemaUrl: string;\r\n\r\n  constructor(\r\n    private appService: AppService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  loadSchema() {\r\n    this.appService.loadSchema(this.schemaUrl);\r\n  }\r\n\r\n  removeSchema() {\r\n    this.schemaUrl = undefined;\r\n    this.appService.removeSchema();\r\n  }\r\n\r\n  ngOnInit() {\r\n    const data = this.appService.loadSchema();\r\n    if (data && data.url) {\r\n      this.schemaUrl = data.url;\r\n    }\r\n\r\n    this.router.events.pipe(\r\n      filter((event) => event instanceof NavigationEnd)\r\n    ).subscribe(() => {\r\n      this.page = this.router.routerState.snapshot.url.replace('/', '');\r\n    });\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar navbar-default navbar-static-top\">\r\n  <div class=\"container-fluid\">\r\n    <!-- Brand and toggle get grouped for better mobile display -->\r\n    <div class=\"navbar-header\">\r\n      <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-1\" aria-expanded=\"false\">\r\n        <span class=\"sr-only\">Toggle navigation</span>\r\n        <span class=\"icon-bar\"></span>\r\n        <span class=\"icon-bar\"></span>\r\n        <span class=\"icon-bar\"></span>\r\n      </button>\r\n      <a class=\"navbar-brand\" routerLink=\"/json\">NGX Schema Form</a>\r\n    </div>\r\n\r\n    <!-- Collect the nav links, forms, and other content for toggling -->\r\n    <div class=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-1\">\r\n      <ul class=\"nav navbar-nav\">\r\n        <li routerLinkActive=\"active\"><a routerLink=\"/json\">JSON Schema </a></li>\r\n        <li routerLinkActive=\"active\"><a routerLink=\"/template\">Template Schema</a></li>\r\n      </ul>\r\n      <div *ngIf=\"page === 'json'\" class=\"navbar-form navbar-right\">\r\n        <div class=\"form-group\">\r\n          <input type=\"text\" [(ngModel)]=\"schemaUrl\" name=\"schemaUrl\" class=\"form-control\" placeholder=\"Load schema form URL\">\r\n        </div>\r\n        <button (click)=\"loadSchema()\" class=\"btn btn-default\" style=\"margin-left: 5px\">Load</button>\r\n        <button *ngIf=\"schemaUrl\" (click)=\"removeSchema()\" class=\"btn btn-default\" style=\"margin-left: 5px\">Clear</button>\r\n      </div>\r\n    </div><!-- /.navbar-collapse -->\r\n  </div><!-- /.container-fluid -->\r\n</nav>\r\n\r\n<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n  SchemaFormModule,\r\n  SchemaValidatorFactory,\r\n  ZSchemaValidatorFactory,\r\n  TemplateSchemaModule,\r\n  WidgetRegistry,\r\n  DefaultWidgetRegistry\r\n} from 'ngx-schema-form';\r\n\r\nimport { routes } from './app.routes';\r\nimport { AppComponent } from './app.component';\r\nimport {\r\n  JsonSchemaExampleComponent\r\n} from './json-schema-example/json-schema-example.component';\r\nimport {\r\n  TemplateSchemaExampleComponent\r\n} from './template-schema-example/template-schema-example.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    JsonSchemaExampleComponent,\r\n    TemplateSchemaExampleComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    RouterModule.forRoot(routes),\r\n    SchemaFormModule.forRoot(),\r\n    TemplateSchemaModule\r\n  ],\r\n  providers: [\r\n    {provide: WidgetRegistry, useClass: DefaultWidgetRegistry},\r\n    {\r\n      provide: SchemaValidatorFactory,\r\n      useClass: ZSchemaValidatorFactory\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Routes } from '@angular/router';\r\n\r\nimport {\r\n  JsonSchemaExampleComponent\r\n} from './json-schema-example/json-schema-example.component';\r\nimport {\r\n  TemplateSchemaExampleComponent\r\n} from './template-schema-example/template-schema-example.component';\r\n\r\n\r\n\r\nexport const routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'json',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'json',\r\n    component: JsonSchemaExampleComponent\r\n  },\r\n  {\r\n    path: 'template',\r\n    component: TemplateSchemaExampleComponent\r\n  }\r\n];\r\n\r\n\r\n","import { Injectable, EventEmitter } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nconst DATA = 'data';\r\n\r\nexport interface AppData {\r\n  url: string;\r\n  schema: object;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AppService {\r\n\r\n  dataChanged = new BehaviorSubject<AppData | null>(null);\r\n\r\n  get data(): AppData {\r\n    if (this._data) {\r\n      return this._data;\r\n    }\r\n\r\n    const data = sessionStorage.getItem(DATA);\r\n    if (data) {\r\n      this._data = JSON.parse(data);\r\n      return this._data;\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  set data(data: AppData) {\r\n    this._data = data;\r\n    sessionStorage.setItem(DATA, JSON.stringify(data));\r\n  }\r\n\r\n  private _data: AppData;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n\r\n  loadSchema(url?: string): AppData {\r\n    if (!url) {\r\n      this.dataChanged.next(this.data);\r\n      return this.data;\r\n    }\r\n\r\n    this.http.get(url).subscribe((schema) => {\r\n      this.data = { url, schema };\r\n      this.dataChanged.next(this.data);\r\n    });\r\n\r\n    return this.data;\r\n  }\r\n\r\n  removeSchema() {\r\n    sessionStorage.removeItem(DATA);\r\n    this._data = undefined;\r\n    this.dataChanged.next(null);\r\n  }\r\n\r\n\r\n\r\n}\r\n","import {FormProperty, PropertyGroup} from '../../../projects/schema-form/src/lib/model';\r\n\r\nconst myFormBindings = {\r\n  '/name': [\r\n    {\r\n      'input': (event, formProperty: FormProperty) => {\r\n        const parent: PropertyGroup = formProperty.findRoot();\r\n\r\n        /**\r\n         * Set the input value for the children\r\n         */\r\n        const child1: FormProperty = parent.getProperty('children/0/name');\r\n\r\n        child1.setValue(formProperty.value, false);\r\n\r\n        const child2: FormProperty = parent.getProperty('children/1/name');\r\n        child2.setValue(event.target.value, false);\r\n\r\n        /**\r\n         * Get the input value for all the children\r\n         */\r\n        for (const objectProperty of parent.getProperty('children').properties) {\r\n          console.log('Value for child ', objectProperty, objectProperty.properties['name'].value);\r\n        }\r\n      }\r\n    },\r\n    {\r\n      'click': (event, formProperty: FormProperty) => {\r\n        console.log('2222 Called event!', event.target, event, formProperty);\r\n      }\r\n    }\r\n  ],\r\n  '/forename': [{\r\n    'mouseover': [(event, formProperty: FormProperty) => {\r\n      console.log('Mouse over event triggered FIRST time!', event.target, event, formProperty);\r\n    }, (event, formProperty: FormProperty) => {\r\n      console.log('Mouse over event triggered SECOND time!', event.target, event, formProperty);\r\n    }]\r\n  }]\r\n};\r\n\r\nexport default myFormBindings;\r\n","import {\r\n  Component,\r\n  ViewEncapsulation,\r\n  OnInit,\r\n  OnDestroy\r\n} from '@angular/core';\r\nimport {Validator, Binding, FormProperty, PropertyGroup} from 'ngx-schema-form';\r\nimport {Subscription} from 'rxjs';\r\n\r\nimport sampleSchema1 from './sampleschema.json';\r\nimport sampleModel from './samplemodel.json';\r\nimport binding_sample_schema from './binding_sample_schema.json';\r\nimport binding_sample_model from './binding_sample_model.json';\r\nimport binding_sample_bindings from './binding_sample_bindings';\r\nimport visibility_binding_example from './visibility-binding-example-schema.json';\r\nimport visibility_binding_example2 from './visibility-binding-example-schema2.json';\r\nimport visibility_binding_example3 from './visibility-binding-example-schema3.json';\r\nimport visibility_binding_example4 from './visibility-binding-example-schema4.json';\r\nimport sample_canonical_path from './sample-canonical-path.json';\r\n\r\nimport {AppService, AppData} from '../app.service';\r\nimport {ISchema} from 'ngx-schema-form';\r\n\r\n@Component({\r\n  selector: 'sf-json-schema-example',\r\n  templateUrl: './json-schema-example.component.html',\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class JsonSchemaExampleComponent implements OnInit, OnDestroy {\r\n  schema: ISchema = {properties: {}};\r\n  model: any = {};\r\n  value: any;\r\n  fieldValidators: { [fieldId: string]: Validator } = {};\r\n  actions = {};\r\n  fieldBindings: { [path: string]: Binding[] } = {};\r\n  schemaUrl: string;\r\n\r\n  private subs: Subscription;\r\n\r\n  samples = [\r\n    {label: 'Sample 1 - General', event: this.changeSchemaFirst, selected: true},\r\n    {label: 'Sample 2 - Custom bindings', event: this.changeSchemaWithBindings, selected: false},\r\n    {label: 'Sample 3 - Otherschema', event: this.changeSchemaOtherschema, selected: false},\r\n    {label: 'Sample 4 - Visibility binding', event: this.changeSchemaVisibilityBinding, selected: false},\r\n    {label: 'Sample 5 - Visibility binding 2', event: this.changeSchemaVisibilityBinding2, selected: false},\r\n    {label: 'Sample 6 - Visibility binding 3', event: this.changeSchemaVisibilityBinding3, selected: false},\r\n    {label: 'Sample 7 - Visibility binding 4', event: this.changeSchemaVisibilityBinding4, selected: false},\r\n    {label: 'Sample 8 - Canonical path', event: this.changeSchemaCanonicalPath, selected: false},\r\n  ];\r\n\r\n  constructor(\r\n    private appService: AppService\r\n  ) {\r\n\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.subs = this.appService.dataChanged\r\n      .subscribe((data: AppData | null) => {\r\n        if (data) {\r\n          this.schema = data.schema;\r\n          return;\r\n        }\r\n        this.changeSchemaInitial();\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.subs) {\r\n      this.subs.unsubscribe();\r\n    }\r\n  }\r\n\r\n  logErrors(errors) {\r\n    console.log('ERRORS', errors);\r\n  }\r\n\r\n  changeSchemaInitial() {\r\n    for (const sample of this.samples) {\r\n      if (sample.selected) {\r\n        sample.event.bind(this)();\r\n      }\r\n    }\r\n  }\r\n\r\n  changeSchema(event) {\r\n    for (const sample of this.samples) {\r\n      if (sample.label === event) {\r\n        sample.event.bind(this)();\r\n      }\r\n    }\r\n  }\r\n\r\n  changeSchemaFirst() {\r\n    this.schema = sampleSchema1 as unknown as ISchema;\r\n    this.model = sampleModel;\r\n    this.fieldBindings = {};\r\n    this.fieldValidators = {};\r\n    this.actions = {};\r\n\r\n    this.fieldValidators['/bornOn'] = (value, property, form) => {\r\n      let errors = null;\r\n      const dateArr = value.split('-');\r\n\r\n      if (dateArr.length === 3) {\r\n        const now = new Date();\r\n        const min = new Date(\r\n          now.getFullYear() - 100,\r\n          now.getMonth(),\r\n          now.getDay(),\r\n        ).getTime();\r\n        const max = new Date().getTime();\r\n        const born = new Date(\r\n          dateArr[0],\r\n          dateArr[1] - 1,\r\n          dateArr[2],\r\n        ).getTime();\r\n\r\n        if (born < min || born > max) {\r\n          errors = [\r\n            {\r\n              bornOn: {\r\n                expectedValue: '>today - 100 && < today',\r\n                actualValue: value,\r\n              },\r\n            },\r\n          ];\r\n        }\r\n      }\r\n      return errors;\r\n    };\r\n    this.fieldValidators['/promotion'] = (value, property, form) => {\r\n      if (value === 'student') {\r\n        const bornOn = form.getProperty('/bornOn');\r\n\r\n        if (bornOn.valid) {\r\n          const date = bornOn.value.split('-');\r\n          const validYear = new Date().getFullYear() - 17;\r\n\r\n          try {\r\n            const actualYear = parseInt(date[0], 10);\r\n\r\n            if (actualYear < validYear) {\r\n              return null;\r\n            }\r\n\r\n            return [\r\n              {\r\n                promotion: {\r\n                  bornOn: {\r\n                    expectedValue: 'year<' + validYear,\r\n                    actualValue: actualYear,\r\n                  },\r\n                },\r\n              },\r\n            ];\r\n          } catch (e) {\r\n          }\r\n        }\r\n\r\n        return [\r\n          {\r\n            promotion: {\r\n              bornOn: {\r\n                expectedFormat: 'date',\r\n                actualValue: bornOn.value,\r\n              },\r\n            },\r\n          },\r\n        ];\r\n      }\r\n\r\n      return null;\r\n    };\r\n    this.actions['alert'] = (property, options) => {\r\n      property.forEachChildRecursive(child => {\r\n        console.log(child.valid, child);\r\n      });\r\n      alert(JSON.stringify(property.value));\r\n    };\r\n    this.actions['reset'] = (form, options) => {\r\n      form.reset();\r\n    };\r\n    this.actions['disable'] = this.disableAll.bind(this);\r\n\r\n    this.actions['toggle_title'] = (formProperty: FormProperty, form: PropertyGroup, params: any) => {\r\n      formProperty.schema.readOnly = !formProperty.schema.readOnly;\r\n    };\r\n\r\n  }\r\n\r\n  changeSchemaOtherschema() {\r\n    this.schema = sampleSchema1 as unknown as ISchema;\r\n    this.model = {};\r\n    this.fieldBindings = {};\r\n    this.fieldValidators = {};\r\n    this.actions = {};\r\n  }\r\n\r\n  changeSchemaWithBindings() {\r\n    this.schema = binding_sample_schema as unknown as ISchema;\r\n    this.model = binding_sample_model;\r\n    this.fieldBindings = binding_sample_bindings;\r\n    this.fieldValidators = {};\r\n    this.actions = {};\r\n  }\r\n\r\n  changeSchemaVisibilityBinding() {\r\n    this.schema = visibility_binding_example as unknown as ISchema;\r\n    this.model = {};\r\n    this.fieldBindings = {};\r\n    this.fieldValidators = {};\r\n    this.actions = {};\r\n  }\r\n\r\n  changeSchemaVisibilityBinding2() {\r\n    this.schema = visibility_binding_example2 as unknown as ISchema;\r\n    this.model = {};\r\n    this.fieldBindings = {};\r\n    this.fieldValidators = {};\r\n    this.actions = {};\r\n  }\r\n\r\n  changeSchemaVisibilityBinding3() {\r\n    this.schema = visibility_binding_example3 as unknown as ISchema;\r\n    this.model = {};\r\n    this.fieldBindings = {};\r\n    this.fieldValidators = {};\r\n    this.actions = {};\r\n  }\r\n\r\n  changeSchemaVisibilityBinding4() {\r\n    this.schema = visibility_binding_example4 as unknown as ISchema;\r\n    this.model = {};\r\n    this.fieldBindings = {};\r\n    this.fieldValidators = {};\r\n    this.actions = {};\r\n  }\r\n\r\n  changeSchemaCanonicalPath(){\r\n    this.schema = sample_canonical_path as unknown as ISchema;\r\n    this.model = {};\r\n    this.fieldBindings = {};\r\n    this.fieldValidators = {};\r\n    this.actions = {};\r\n  }\r\n\r\n  disableAll() {\r\n    Object.keys(this.schema.properties).map(prop => {\r\n      this.schema.properties[prop].readOnly = true;\r\n    });\r\n  }\r\n\r\n  setValue(value) {\r\n    this.value = value;\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-4\">\r\n      <label for=\"samples\">Select schema form example: </label>&nbsp;\r\n      <select id=\"samples\" (change)=\"changeSchema($event.target.value)\">\r\n        <option *ngFor=\"let sample of samples\" (select)=\"sample.event()\" [selected]=\"sample.selected\">{{sample.label}}</option>\r\n      </select>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-md-4\">\r\n      <h3>Form:</h3>\r\n      <sf-form (onErrorChange)=\"logErrors($event.value)\"\r\n               (onChange)=\"setValue($event.value)\"\r\n               [schema]=\"schema\"\r\n               [(model)]=\"model\"\r\n               [validators]=\"fieldValidators\"\r\n               [actions]=\"actions\"\r\n               [bindings]=\"fieldBindings\">\r\n      </sf-form>\r\n    </div>\r\n    <div class=\"col-md-4\">\r\n      <h3>Schema:</h3>\r\n      <pre>{{schema | json}}</pre>\r\n    </div>\r\n    <div class=\"col-md-4\">\r\n      <h3>Model:</h3>\r\n      <pre>{{value | json}}</pre>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-template-schema-example',\r\n  templateUrl: './template-schema-example.component.html',\r\n  styleUrls: ['./template-schema-example.component.css']\r\n})\r\nexport class TemplateSchemaExampleComponent implements OnInit {\r\n\r\n  model: any = {};\r\n  /**\r\n   * Using a separate variable for showing the model prevents from: \r\n   * `Error: ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value:` \r\n   */\r\n  value;\r\n\r\n  constructor() { }\r\n\r\n  onClick(message: string) {\r\n    alert(message);\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  setValue(value) {\r\n    if (undefined === this.value) {\r\n      /**\r\n       * If the first time the variable is set, then setting timeout will prevents error: \r\n       * `Error: ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value:` \r\n       */\r\n      setTimeout(() => {\r\n        this.value = value;\r\n      }, 0);\r\n      return\r\n    }\r\n    this.value = value;\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-4\">\r\n            <h3>Form:</h3>\r\n            <sf-form #form \r\n                [(ngModel)]=\"model\" \r\n                (onChange)=\"setValue($event.value)\"\r\n                templateSchema>\r\n                <sf-field name=\"recipient\" type=\"object\">\r\n                    Part 1 - Recipient\r\n                    <sf-field\r\n                        name=\"firstName\"\r\n                        [required]=\"true\"\r\n                        description=\"(First Name)\"\r\n                        placeholder=\"First Name\"\r\n                        [schema]=\"{ maxLength: 40, minLength: 2 }\">\r\n                        First Name\r\n                    </sf-field>\r\n                    <sf-field\r\n                        name=\"lastName\"\r\n                        [required]=\"true\"\r\n                        description=\"(Last Name)\"\r\n                        placeholder=\"Last Name\"\r\n                        [schema]=\"{ maxLength: 40, minLength: 2 }\">\r\n                        Last Name\r\n                    </sf-field>\r\n                    <sf-field name=\"categories\" type=\"array\" widget=\"checkbox\">\r\n                        Categories\r\n                        <sf-field type=\"string\">\r\n                            <sf-item value=\"dog\">Dog</sf-item>\r\n                            <sf-item value=\"cat\">Cat</sf-item>\r\n                            <sf-item value=\"dolphin\">Dolphin</sf-item>\r\n                        </sf-field>\r\n                    </sf-field>\r\n                    <sf-field\r\n                        name=\"bornOn\"\r\n                        widget=\"date\"\r\n                        format=\"date\"\r\n                        [schema]=\"{ default: '1800-12-12' }\"\r\n                        description=\"(Born On)\"\r\n                        placeholder=\"Ex: 2009-03-11\">\r\n                        Born On\r\n                    </sf-field>\r\n                    <sf-field\r\n                        name=\"moreInfo\"\r\n                        type=\"boolean\"\r\n                        description=\"More information?\"\r\n                        widget=\"checkbox\"\r\n                        [schema]=\"{ default: true }\"></sf-field>\r\n                    <sf-field\r\n                        name=\"favoriteColor\"\r\n                        widget=\"color\"\r\n                        [schema]=\"{ default: '#aaa111', pattern: '^#[0-9a-fA-F]{6}$', visibleIf: { moreInfo: [true] } }\">\r\n                        Favorite color\r\n                    </sf-field>\r\n                    <sf-field name=\"colors\" type=\"array\" widget=\"array\">\r\n                        Colors\r\n                        <sf-field type=\"string\" widget=\"color\">\r\n                            <sf-button id=\"Remove\" (click)=\"onClick('Supprimer')\">Supprimer</sf-button>\r\n                        </sf-field>\r\n                        <sf-button id=\"addItem\" (click)=\"onClick('Ajouter')\">Ajouter</sf-button>\r\n                        <sf-button id=\"reset\" (click)=\"onClick('Reset')\">Reset</sf-button>\r\n                    </sf-field>\r\n                </sf-field>\r\n\r\n                <sf-field name=\"survey\" type=\"object\">\r\n                    Little survey\r\n                    <sf-field name=\"q1\" description=\"Enter a number\"></sf-field>\r\n                    <sf-field name=\"q2\" type=\"object\" description=\"Address\">\r\n                        <sf-field\r\n                            name=\"color\"\r\n                            description=\"Color\"\r\n                            widget=\"color\"\r\n                            [schema]=\"{ default: '#aaa000', pattern: 'ff$' }\"></sf-field>\r\n                        <sf-field\r\n                            name=\"number\"\r\n                            description=\"Zip\"\r\n                            widget=\"number\"\r\n                            [schema]=\"{ default: 15 }\"></sf-field>\r\n                    </sf-field>\r\n                </sf-field>\r\n                <sf-field name=\"transaction\" type=\"object\">\r\n                    Part 2 - Transactions\r\n                    <sf-field\r\n                        name=\"transactionNumber\"\r\n                        description=\"Transaction number\"\r\n                        widget=\"number\"\r\n                        [readOnly]=\"true\"\r\n                        [schema]=\"{ default: 15 }\"></sf-field>\r\n                    <sf-field\r\n                        name=\"transactionDescription\"\r\n                        widget=\"textarea\"\r\n                        description=\"What is being transacted\"></sf-field>\r\n\r\n                    <sf-field name=\"promotion\" widget=\"radio\" description=\"promotion\">\r\n                        <sf-item value=\"student\">Student discount (20%)</sf-item>\r\n                        <sf-item value=\"summer\">Summer 2016 discount (15%)</sf-item>\r\n                        <sf-item value=\"none\">None</sf-item>\r\n                    </sf-field>\r\n\r\n                    <sf-field name=\"category\" type=\"array\" widget=\"select\" description=\"Category\">\r\n                        <sf-field type=\"string\">\r\n                            <sf-item value=\"design\">Design</sf-item>\r\n                            <sf-item value=\"hightech\">High-Tech</sf-item>\r\n                            <sf-item value=\"materials\">Materials</sf-item>\r\n                            <sf-item value=\"services\">Services</sf-item>\r\n                        </sf-field>\r\n                    </sf-field>\r\n                </sf-field>\r\n\r\n                <sf-field name=\"shipping\" type=\"object\">\r\n                    Part 3 - Shipping\r\n                    <sf-field\r\n                        name=\"numberOfBoxes\"\r\n                        description=\"Number of boxes required\"\r\n                        widget=\"range\"\r\n                        [schema]=\"{ minimun: 1, maximun: 10 }\"></sf-field>\r\n\r\n                    <sf-field\r\n                        name=\"delivery\"\r\n                        type=\"string\"\r\n                        widget=\"select\"\r\n                        [schema]=\"{ default: 'fedex' }\"\r\n                        description=\"Delivery service\">\r\n                        <sf-item value=\"fedex\">Fedex</sf-item>\r\n                        <sf-item value=\"ups\">UPS</sf-item>\r\n                        <sf-item value=\"other\">Other</sf-item>\r\n                    </sf-field>\r\n\r\n                </sf-field>\r\n\r\n                <sf-field name=\"contact\" type=\"object\">\r\n                    Part 4 - Email\r\n                    <sf-field\r\n                        name=\"useCustomEmail\"\r\n                        type=\"boolean\"\r\n                        description=\"Write a custom email ?\"></sf-field>\r\n                    <sf-field\r\n                        *ngIf=\"model?.contact?.useCustomEmail\"\r\n                        name=\"customEmail\"\r\n                        widget=\"textarea\"\r\n                        description=\"Email to send\"></sf-field>\r\n                </sf-field>\r\n\r\n                <sf-field name=\"confirmation\" type=\"object\">\r\n                    Part 5 - Confirmation\r\n                    <sf-field name=\"confirmationEmail\" format=\"email\" description=\"Email\"></sf-field>\r\n                    <sf-field name=\"password\" widget=\"password\" description=\"Password\"></sf-field>\r\n                </sf-field>\r\n\r\n                <sf-button (click)=\"onClick('Something')\">Do Something</sf-button>\r\n            </sf-form>\r\n\r\n        </div>\r\n        <div class=\"col-md-4\" style=\"height: 1000px\">\r\n            <h3>Template:</h3>\r\n<textarea class=\"template-schema\" readonly wrap=\"off\" resize=\"off\">\r\n&lt;sf-form #form [(ngModel)]=\"model\" templateSchema&gt;\r\n    &lt;sf-field name=\"recipient\" type=\"object\"&gt;\r\n        Part 1 - Recipient\r\n        &lt;sf-field\r\n            name=\"firstName\"\r\n            [required]=\"true\"\r\n            description=\"(First Name)\"\r\n            placeholder=\"First Name\"\r\n            [schema]=\"{ maxLength: 40, minLength: 2 }\"&gt;\r\n            First Name\r\n        &lt;/sf-field&gt;\r\n        &lt;sf-field\r\n            name=\"lastName\"\r\n            [required]=\"true\"\r\n            description=\"(Last Name)\"\r\n            placeholder=\"Last Name\"\r\n            [schema]=\"{ maxLength: 40, minLength: 2 }\"&gt;\r\n            Last Name\r\n        &lt;/sf-field&gt;\r\n        &lt;sf-field name=\"categories\" type=\"array\" widget=\"checkbox\"&gt;\r\n            Categories\r\n            &lt;sf-field type=\"string\"&gt;\r\n                &lt;sf-item value=\"dog\"&gt;Dog&lt;/sf-item&gt;\r\n                &lt;sf-item value=\"cat\"&gt;Cat&lt;/sf-item&gt;\r\n                &lt;sf-item value=\"dolphin\"&gt;Dolphin&lt;/sf-item&gt;\r\n            &lt;/sf-field&gt;\r\n        &lt;/sf-field&gt;\r\n        &lt;sf-field\r\n            name=\"bornOn\"\r\n            widget=\"date\"\r\n            format=\"date\"\r\n            [schema]=\"{ default: '1800-12-12' }\"\r\n            description=\"(Born On)\"\r\n            placeholder=\"Ex: 2009-03-11\"&gt;\r\n            Born On\r\n        &lt;/sf-field&gt;\r\n        &lt;sf-field\r\n            name=\"moreInfo\"\r\n            type=\"boolean\"\r\n            description=\"More information?\"\r\n            widget=\"checkbox\"\r\n            [schema]=\"{ default: true }\"&gt;&lt;/sf-field&gt;\r\n        &lt;sf-field\r\n            name=\"favoriteColor\"\r\n            widget=\"color\"\r\n            [schema]=\"{ default: '#aaa111', pattern: '^#[0-9a-fA-F]{6}$', visibleIf: { moreInfo: [true] } }\"&gt;\r\n            Favorite color\r\n        &lt;/sf-field&gt;\r\n        &lt;sf-field name=\"colors\" type=\"array\" widget=\"array\"&gt;\r\n            Colors\r\n            &lt;sf-field type=\"string\" widget=\"color\"&gt;\r\n                &lt;sf-button id=\"Remove\" (click)=\"onClick('Supprimer')\"&gt;Supprimer&lt;/sf-button&gt;\r\n            &lt;/sf-field&gt;\r\n            &lt;sf-button id=\"addItem\" (click)=\"onClick('Ajouter')\"&gt;Ajouter&lt;/sf-button&gt;\r\n            &lt;sf-button id=\"reset\" (click)=\"onClick('Reset')\"&gt;Reset&lt;/sf-button&gt;\r\n        &lt;/sf-field&gt;\r\n    &lt;/sf-field&gt;\r\n\r\n    &lt;sf-field name=\"survey\" type=\"object\"&gt;\r\n        Little survey\r\n        &lt;sf-field name=\"q1\" description=\"Enter a number\"&gt;&lt;/sf-field&gt;\r\n        &lt;sf-field name=\"q2\" type=\"object\" description=\"Address\"&gt;\r\n            &lt;sf-field\r\n                name=\"color\"\r\n                description=\"Color\"\r\n                widget=\"color\"\r\n                [schema]=\"{ default: '#aaa000', pattern: 'ff$' }\"&gt;&lt;/sf-field&gt;\r\n            &lt;sf-field\r\n                name=\"number\"\r\n                description=\"Zip\"\r\n                widget=\"number\"\r\n                [schema]=\"{ default: 15 }\"&gt;&lt;/sf-field&gt;\r\n        &lt;/sf-field&gt;\r\n    &lt;/sf-field&gt;\r\n    &lt;sf-field name=\"transaction\" type=\"object\"&gt;\r\n        Part 2 - Transactions\r\n        &lt;sf-field\r\n            name=\"transactionNumber\"\r\n            description=\"Transaction number\"\r\n            widget=\"number\"\r\n            [readOnly]=\"true\"\r\n            [schema]=\"{ default: 15 }\"&gt;&lt;/sf-field&gt;\r\n        &lt;sf-field\r\n            name=\"transactionDescription\"\r\n            widget=\"textarea\"\r\n            description=\"What is being transacted\"&gt;&lt;/sf-field&gt;\r\n\r\n        &lt;sf-field name=\"promotion\" widget=\"radio\" description=\"promotion\"&gt;\r\n            &lt;sf-item value=\"student\"&gt;Student discount (20%)&lt;/sf-item&gt;\r\n            &lt;sf-item value=\"summer\"&gt;Summer 2016 discount (15%)&lt;/sf-item&gt;\r\n            &lt;sf-item value=\"none\"&gt;None&lt;/sf-item&gt;\r\n        &lt;/sf-field&gt;\r\n\r\n        &lt;sf-field name=\"category\" type=\"array\" widget=\"select\" description=\"Category\"&gt;\r\n            &lt;sf-field type=\"string\"&gt;\r\n                &lt;sf-item value=\"design\"&gt;Design&lt;/sf-item&gt;\r\n                &lt;sf-item value=\"hightech\"&gt;High-Tech&lt;/sf-item&gt;\r\n                &lt;sf-item value=\"materials\"&gt;Materials&lt;/sf-item&gt;\r\n                &lt;sf-item value=\"services\"&gt;Services&lt;/sf-item&gt;\r\n            &lt;/sf-field&gt;\r\n        &lt;/sf-field&gt;\r\n    &lt;/sf-field&gt;\r\n\r\n    &lt;sf-field name=\"shipping\" type=\"object\"&gt;\r\n        Part 3 - Shipping\r\n        &lt;sf-field\r\n            name=\"numberOfBoxes\"\r\n            description=\"Number of boxes required\"\r\n            widget=\"range\"\r\n            [schema]=\"{ minimun: 1, maximun: 10 }\"&gt;&lt;/sf-field&gt;\r\n\r\n        &lt;sf-field\r\n            name=\"delivery\"\r\n            type=\"string\"\r\n            widget=\"select\"\r\n            [schema]=\"{ default: 'fedex' }\"\r\n            description=\"Delivery service\"&gt;\r\n            &lt;sf-item value=\"fedex\"&gt;Fedex&lt;/sf-item&gt;\r\n            &lt;sf-item value=\"ups\"&gt;UPS&lt;/sf-item&gt;\r\n            &lt;sf-item value=\"other\"&gt;Other&lt;/sf-item&gt;\r\n        &lt;/sf-field&gt;\r\n\r\n    &lt;/sf-field&gt;\r\n\r\n    &lt;sf-field name=\"contact\" type=\"object\"&gt;\r\n        Part 4 - Email\r\n        &lt;sf-field\r\n            name=\"useCustomEmail\"\r\n            type=\"boolean\"\r\n            description=\"Write a custom email ?\"&gt;&lt;/sf-field&gt;\r\n        &lt;sf-field\r\n            *ngIf=\"model?.contact?.useCustomEmail\"\r\n            name=\"customEmail\"\r\n            widget=\"textarea\"\r\n            description=\"Email to send\"&gt;&lt;/sf-field&gt;\r\n    &lt;/sf-field&gt;\r\n\r\n    &lt;sf-field name=\"confirmation\" type=\"object\"&gt;\r\n        Part 5 - Confirmation\r\n        &lt;sf-field name=\"confirmationEmail\" format=\"email\" description=\"Email\"&gt;&lt;/sf-field&gt;\r\n        &lt;sf-field name=\"password\" widget=\"password\" description=\"Password\"&gt;&lt;/sf-field&gt;\r\n    &lt;/sf-field&gt;\r\n\r\n    &lt;sf-button (click)=\"onClick('Something')\"&gt;Do Something&lt;/sf-button&gt;\r\n&lt;/sf-form&gt;\r\n\r\n</textarea>\r\n        </div>\r\n        <div class=\"col-md-4\">\r\n            <h3>Model:</h3>\r\n            <pre>{{value | json}}</pre>\r\n        </div>\r\n    </div>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"names":["DefaultWidget","_","_2","selectors","decls","vars","template","DefaultWidget_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","DisableControlDirective","disableControl","condition","action","ngControl","control","constructor","ɵɵdirectiveInject","i1","NgControl","inputs","ArrayLayoutWidget","ɵɵattribute","ctx_r0","id","ɵɵadvance","ɵɵtextInterpolate1","schema","title","ɵɵtextInterpolate","ctx_r1","description","ɵɵlistener","ArrayWidget_div_3_button_2_Template_button_click_0_listener","ɵɵrestoreView","_r8","itemProperty_r4","ɵɵnextContext","$implicit","ctx_r6","ɵɵresetView","removeItem","ɵɵelement","ɵɵproperty","ctx_r5","isRemoveButtonDisabled","ɵɵtemplate","ArrayWidget_div_3_button_2_Template","ctx_r2","hasOwnProperty","minItems","maxItems","ArrayWidget_button_4_Template_button_click_0_listener","_r10","ctx_r9","addItem","ctx_r3","isAddButtonDisabled","ArrayWidget","formProperty","updateButtonDisabledState","item","trackByIndex","index","buttonDisabledAdd","buttonDisabledRemove","Array","isArray","properties","length","t","features","ɵɵInheritDefinitionFeature","consts","ArrayWidget_Template","ArrayWidget_label_1_Template","ArrayWidget_span_2_Template","ArrayWidget_div_3_Template","ArrayWidget_button_4_Template","ButtonWidget","ButtonWidget_Template","ButtonWidget_Template_button_click_0_listener","$event","button","label","ControlWidget","name","CheckboxWidget_div_2_input_3_Template","value","readOnly","CheckboxWidget_ng_container_3_div_1_Template_input_change_2_listener","_r7","onCheck","target","ɵɵpropertyInterpolate","option_r5","enum","ctx_r4","checked","ɵɵelementContainerStart","CheckboxWidget_ng_container_3_div_1_Template","ɵɵelementContainerEnd","items","oneOf","CheckboxWidget","ngAfterViewInit","valueChanges","subscribe","newValue","setValue","emitEvent","map","v","errorsChanges","errors","setErrors","el","Object","keys","CheckboxWidget_Template","CheckboxWidget_label_1_Template","CheckboxWidget_div_2_Template","CheckboxWidget_ng_container_3_Template","type","FileWidget","IntegerWidget","ObjectWidget","RadioWidget","RangeWidget","SelectWidget","StringWidget","TextAreaWidget","WidgetRegistry","DefaultWidgetRegistry","register","setDefaultWidget","factory","ɵfac","reader","FileReader","filedata","onloadend","data","window","btoa","result","onFileChange","file","files","filename","size","encoding","readAsBinaryString","FileWidget_Template","FileWidget_label_1_Template","FileWidget_span_2_Template","FileWidget_Template_input_change_3_listener","FileWidget_input_4_Template","IntegerWidget_Template","IntegerWidget_label_1_Template","IntegerWidget_span_2_Template","minimum","maximum","placeholder","maxLength","minLength","ObjectLayoutWidget","fieldset_r1","getProperty","fieldId_r7","ObjectWidget_fieldset_0_legend_1_Template","ObjectWidget_fieldset_0_div_2_Template","ObjectWidget_fieldset_0_div_3_Template","fields","ObjectWidget_Template","ObjectWidget_fieldset_0_Template","fieldsets","option_r4","RadioWidget_Template","RadioWidget_label_1_Template","RadioWidget_span_2_Template","RadioWidget_div_3_Template","RadioWidget_input_4_Template","RangeWidget_Template","RangeWidget_label_1_Template","RangeWidget_span_2_Template","RangeWidget_input_4_Template","option_r9","SelectWidget_select_3_ng_container_1_option_1_Template","option_r11","SelectWidget_select_3_ng_template_2_option_0_Template","SelectWidget_select_3_ng_container_1_Template","SelectWidget_select_3_ng_template_2_Template","ɵɵtemplateRefExtractor","option_r13","SelectWidget_select_4_option_1_Template","SelectWidget_Template","SelectWidget_label_1_Template","SelectWidget_span_2_Template","SelectWidget_select_3_Template","SelectWidget_select_4_Template","SelectWidget_input_5_Template","StringWidget_ng_template_1_label_1_Template","StringWidget_ng_template_1_span_2_Template","StringWidget_ng_template_1_input_4_Template","widget","isRequired","getInputType","StringWidget_Template","StringWidget_input_0_Template","StringWidget_ng_template_1_Template","_r2","TextAreaWidget_Template","TextAreaWidget_label_1_Template","TextAreaWidget_span_2_Template","ExpressionCompilerFactory","JEXL","JEXLExpressionCompilerFactory","createExpressionCompiler","JEXLExpressionCompiler","createExpressionCompilerVisibilityIf","JEXLExpressionCompilerVisibiltyIf","evaluate","expression","context","Jexl","evalSync","source","EventEmitter","NG_VALUE_ACCESSOR","ActionRegistry","FormPropertyFactory","SchemaPreprocessor","ValidatorRegistry","BindingRegistry","SchemaValidatorFactory","WidgetFactory","TerminatorService","PropertyBindingRegistry","LogService","rootProperty","rootName","useFactory","schemaValidatorFactory","validatorRegistry","propertyBindingRegistry","expressionCompilerFactory","logService","FormComponent","formPropertyFactory","actionRegistry","bindingRegistry","cdr","terminator","actions","validators","bindings","onChange","modelChange","isValid","onErrorChange","onErrorsChange","writeValue","obj","reset","registerOnChange","fn","onChangeCallback","onValueChanges","bind","registerOnTouched","ngOnChanges","changes","setValidators","setActions","setBindings","firstChange","destroy","preprocess","createProperty","model","emit","_bindVisibility","detectChanges","clear","validatorId","actionId","bindingPath","setModel","key","assign","observers","i2","i3","i4","ChangeDetectorRef","i5","outputs","ɵɵProvidersFeature","provide","deps","useExisting","multi","ɵɵNgOnChangesFeature","FormComponent_Template","FormComponent_form_0_Template","ViewContainerRef","FormElementComponentAction","widgetFactory","ngOnInit","subs","onDestroy","ref","createWidget","container","instance","ngOnDestroy","unsubscribe","viewQuery","FormElementComponentAction_Query","FormElementComponentAction_ng_template_0_Template","UntypedFormControl","button_r2","FormElementComponent_div_0_Template_sf_widget_chooser_widgetInstanciated_1_listener","_r4","onWidgetInstanciated","FormElementComponent_div_0_sf_form_element_action_2_Template","ɵɵclassProp","valid","buttons","FormElementComponent","counter","renderer","elementRef","logger","unlisten","parseButtons","setupBindings","get","path","forEach","binding","eventId","createBinding","listeners","push","listen","nativeElement","event","_listeners","_listener","Function","e","error","warn","undefined","createButtonCallback","parameters","preventDefault","canonicalPathNotation","root","Renderer2","ElementRef","_3","FormElementComponent_Template","FormElementComponent_div_0_Template","visible","InjectionToken","Inject","Optional","LOG_LEVEL","level","logLevel","isWarnEnabled","isErrorEnabled","isLogEnabled","__decorate","__param","DefaultLogService","console","log","ɵɵinject","PropertyGroup","PROPERTY_TYPE_MAPPING","ArrayProperty","parent","newProperty","addProperty","itemSchema","itemSchemas","additionalItems","filter","i","updateValueAndValidity","onlySelf","createProperties","resetProperties","_hasValue","_updateValue","reduceValue","forEachChild","property","_value","default","idx","array","FormProperty","AtomicProperty","resetValue","fallbackValue","concat","BooleanProperty","boolean","BehaviorSubject","combineLatest","of","distinctUntilChanged","FieldType","isEmptyObject","_canonicalPath","__canonicalPath","canonicalPath","__canonicalPathNotation","replace","RegExp","_rootName","_errors","_valueChanges","_errorsChanges","_visible","_visibilityChanges","schemaValidator","createValidatorFn","expressionCompilerVisibiltyIf","_parent","_root","createRootName","_path","isNullableType","some","Null","next","_runValidation","customValidator","customErrors","findRoot","mergeErrors","newErrors","extendErrors","searchProperty","prop","base","substr","setVisible","__evaluateVisibilityIf","sourceProperty","targetProperty","dependencyPath","expArray","expString","indexOf","_expresssion","substring","val","__bindVisibility_oneOf_or_allOf","visibleIfProperty","visibleIf","oneOfOrAllOf","allOf","finalObservable","__bindConditionalVisiblityChain","pipe","visbilityElement","isOneOf","isAllOf","visibiltyBindings","objInOf","containsOneOf","containsAllOf","visibleIfOf","observables","__handleDependencyPath","values","ret","dependencyElement","propertiesBinding","findProperties","valueCheck","_chk","visibilityCheck","and","v1","v2","registerMissingVisibilityBinding","_propertyBindingRegistry","getPropertyBindingsVisibility","add","propertyPath","props","paths","findPropertyPaths","p","parentPath","ix","prePath","subPath","pathFound","arrProp","curreItemPath","endsWith","curreItemPrePath","childrenPathFound","_properties","_propertyProxyHandler","ExtendedProxyHandler","Proxy","subPathIdx","propertyId","forEachChildRecursive","child","_bindVisibilityRecursive","isRoot","set","receiver","assertCanonicalPath","propertyValue","getCanonicalPath","indexOfChild","pos","lastIndexOf","toString","recalculateCanonicalPath","propertyGroup","propertyGroupChildren","p_path","split","splice","join","children","rebindVisibility","rebindAll","findPropertiesToRebind","propertyBindings","rebind","findByDependencyPath","startsWith","uniqueValues","_property","rebindPaths","rebindPropPath","rebindProp","deleteProperty","Error","$ref","refSchema","getSchema","isUnionType","isValidNullableUnionType","extractTypeFromNullableUnionType","TypeError","unionType","subType","includes","Number","Integer","Boolean","String","NullProperty","null","NumberProperty","parseFloat","parseInt","integer","number","ObjectProperty","propertiesId","propertySchema","slice","object","isBlank","formatMessage","message","schemaError","mesg","schemaWarning","jsonSchema","normalizeExtensions","checkProperties","checkAndCreateFieldsets","checkItems","normalizeWidget","recursiveCheck","order","replaceOrderByFieldsets","createFieldsets","checkFieldsUsage","fieldsId","usedFields","fieldset","fieldId","required","remainingfieldsId","fieldSchema","definitions","removeRecursiveRefProperties","definitionPath","extensions","regex","k","find","match","copy","JSON","parse","stringify","StringProperty","string","isPresent","o","validator","getPropertyBindings","PropertyBindings","PropertyBindingTypes","visibility","sourcesIndex","SimplePropertyIndexer","dependenciesIndex","sourcePropertyPath","store","results","res","found","getBySourcePropertyPath","createPathIndex","findOnlyWithValue","MARKER","_createPathIndex","_storeIndex","pathIndex","indexPos","_findInIndex","ixRes","__findIndex","indexerResults","segment","wild","_keys","restPath","restIndex","restParent","restPaths","CommonModule","FormsModule","ReactiveFormsModule","WidgetChooserComponent","ZSchemaValidatorFactory","moduleProviders","useClass","useValue","SchemaFormModule","forRoot","ngModule","providers","declarations","imports","exports","ZSchema","compile","createSchemaValidator","zschema","breakOnFirstError","zSchema","compileSchema","getResolvedSchema","validate","err","getLastErrors","denormalizeRequiredPropertyPaths","getDefinition","getLastError","code","params","foundSchema","ptr","forwardRef","TemplateSchemaElement","ButtonComponent","click","setLabelFromContent","textContent","getTextContent","ngAfterContentInit","ngContentSelectors","_c0","ButtonComponent_Template","ɵɵprojection","FieldParent","getButtons","childButtons","randomString","Math","random","_button","getFieldsValidators","reduce","field","getValidators","getFieldsSchema","ItemComponent","merge","FieldComponent","templateSchemaService","childFields","getOneOf","format","childValidators","isFirstChange","changed","childItems","setTitleFromContent","TemplateSchemaService","contentQueries","FieldComponent_ContentQueries","dirIndex","ItemComponent_Template","nodes","from","childNodes","node","nodeType","TEXT_NODE","pop","nodeValue","trim","SimpleChange","TemplateSchemaDirective","formComponent","terminatorService","setFormDocumentSchema","previousSchema","requred","toArray","TemplateSchemaDirective_ContentQueries","TemplateSchemaModule","Subject","Widget","messages","errorMessages","m","widgetInstanciated","widgetInfo","widgetInstance","WidgetChooserComponent_Query","registry","resolver","componentClass","getWidgetType","componentFactory","resolveComponentFactory","createComponent","ComponentFactoryResolver","widgets","defaultWidget","getDefaultWidget","hasWidget","NavigationEnd","AppComponent_div_19_button_5_Template_button_click_0_listener","_r3","removeSchema","AppComponent_div_19_Template_input_ngModelChange_2_listener","_r5","schemaUrl","AppComponent_div_19_Template_button_click_3_listener","loadSchema","AppComponent_div_19_button_5_Template","AppComponent","appService","router","url","events","page","routerState","snapshot","AppService","Router","AppComponent_Template","AppComponent_div_19_Template","BrowserModule","HttpClientModule","RouterModule","routes","JsonSchemaExampleComponent","TemplateSchemaExampleComponent","AppModule","bootstrap","redirectTo","pathMatch","component","DATA","_data","sessionStorage","getItem","setItem","http","dataChanged","HttpClient","providedIn","myFormBindings","input","child1","child2","objectProperty","sampleSchema1","sampleModel","binding_sample_schema","binding_sample_model","binding_sample_bindings","visibility_binding_example","visibility_binding_example2","visibility_binding_example3","visibility_binding_example4","sample_canonical_path","JsonSchemaExampleComponent_option_7_Template_option_select_0_listener","restoredCtx","sample_r1","selected","fieldValidators","fieldBindings","samples","changeSchemaFirst","changeSchemaWithBindings","changeSchemaOtherschema","changeSchemaVisibilityBinding","changeSchemaVisibilityBinding2","changeSchemaVisibilityBinding3","changeSchemaVisibilityBinding4","changeSchemaCanonicalPath","changeSchemaInitial","logErrors","sample","changeSchema","form","dateArr","now","Date","min","getFullYear","getMonth","getDay","getTime","max","born","bornOn","expectedValue","actualValue","date","validYear","actualYear","promotion","expectedFormat","options","alert","disableAll","JsonSchemaExampleComponent_Template","JsonSchemaExampleComponent_Template_select_change_6_listener","JsonSchemaExampleComponent_option_7_Template","JsonSchemaExampleComponent_Template_sf_form_onErrorChange_12_listener","JsonSchemaExampleComponent_Template_sf_form_onChange_12_listener","JsonSchemaExampleComponent_Template_sf_form_modelChange_12_listener","ɵɵpipeBind1","onClick","setTimeout","TemplateSchemaExampleComponent_Template","TemplateSchemaExampleComponent_Template_sf_form_ngModelChange_5_listener","TemplateSchemaExampleComponent_Template_sf_form_onChange_5_listener","TemplateSchemaExampleComponent_Template_sf_button_click_30_listener","TemplateSchemaExampleComponent_Template_sf_button_click_32_listener","TemplateSchemaExampleComponent_Template_sf_button_click_34_listener","TemplateSchemaExampleComponent_sf_field_76_Template","TemplateSchemaExampleComponent_Template_sf_button_click_81_listener","ɵɵpureFunction0","_c1","_c2","ɵɵpureFunction1","_c5","_c4","_c3","_c6","_c7","_c8","_c9","contact","useCustomEmail","environment","production","enableProdMode","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}